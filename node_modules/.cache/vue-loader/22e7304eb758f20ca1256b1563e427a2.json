{"remainingRequest":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/aquaman_view/src/views/asset/curd.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/views/aquaman_view/src/views/asset/curd.vue","mtime":1605335102143},{"path":"/home/views/aquaman_view/node_modules/css-loader/dist/cjs.js","mtime":1601261329179},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1601261366078},{"path":"/home/views/aquaman_view/node_modules/postcss-loader/src/index.js","mtime":1601261365169},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js","mtime":1601261366062}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1peGluLWNvbXBvbmVudHMtY29udGFpbmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMmY1OwogIHBhZGRpbmc6IDMwcHg7CiAgbWluLWhlaWdodDogY2FsYygxMDB2aCAtIDg0cHgpOwp9Ci50ZXh0IHsKICBmb250LXNpemU6IDE0cHg7Cn0KLmNsZWFyZml4OmJlZm9yZSwKLmNsZWFyZml4OmFmdGVyIHsKICBkaXNwbGF5OiB0YWJsZTsKICBjb250ZW50OiAiIjsKfQouY2xlYXJmaXg6YWZ0ZXIgewogIGNsZWFyOiBib3RoOwp9Ci5ib3gtY2FyZC1pbiB7CiAgd2lkdGg6IDYwJTsKfQouZHVtcC1ib3ggewogIGZvbnQtd2VpZ2h0OiA3MDA7CiAgY29sb3I6ICM2MDYyNjY7Cn0K"},{"version":3,"sources":["curd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"curd.vue","sourceRoot":"src/views/asset","sourcesContent":["<template>\n  <div class=\"mixin-components-container\">\n    <el-row>\n      <el-card class=\"box-card\">\n        <div slot=\"header\" class=\"clearfix\">\n          <span>{{title}}</span>\n        </div>\n        <div style=\"margin-bottom:50px;\">\n          <el-form ref=\"form\" :model=\"form\" label-width=\"140px\">\n            <el-form-item v-if=\"task_id\" label=\"任务名\" class=\"is-required\">\n              <el-input v-model=\"form.name\" style=\"width: 50%\" disabled></el-input>\n            </el-form-item>\n            <el-form-item v-else label=\"任务名\" class=\"is-required\">\n              <el-input v-model=\"form.name\" style=\"width: 50%\" maxlength=\"20\" minlength=\"3\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"域名 / IP\" class=\"is-required\">\n              <el-input v-model=\"form.target\" style=\"width: 50%\" maxlength=\"28\" minlength=\"3\" placeholder=\"aquaman.org\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"扫描周期\">\n              <el-select v-model=\"form.recursion\" placeholder=\"请选择\" style=\"width:200px\">\n                <el-option label=\"一次\" :value=\"0\"></el-option>\n                <el-option label=\"每天\" :value=\"1\"></el-option>\n                <el-option label=\"每周\" :value=\"7\"></el-option>\n                <el-option label=\"每月\" :value=\"30\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"认证爆破\">\n                <el-radio-group v-model=\"form.open_auth\">\n                    <el-radio :label=\"0\">关闭</el-radio>\n                    <el-radio :label=\"1\">开启</el-radio>\n                </el-radio-group>\n            </el-form-item>\n            <el-form-item label=\"Web渗透\">\n                <el-radio-group v-model=\"form.open_web\">\n                    <el-radio :label=\"0\">关闭</el-radio>\n                    <el-radio :label=\"1\">开启</el-radio>\n                </el-radio-group>\n            </el-form-item>\n            <el-form-item label=\"漏洞扫描\">\n                <el-radio-group v-model=\"form.open_poc\">\n                    <el-radio :label=\"0\">关闭</el-radio>\n                    <el-radio :label=\"1\">开启</el-radio>\n                </el-radio-group>\n            </el-form-item>\n            <el-form-item label=\"端口模式\">\n                <el-radio-group v-model=\"form.port_mode\">\n                    <el-radio :label=\"0\">系统默认</el-radio>\n                    <el-radio :label=\"1\">自定义</el-radio>\n                </el-radio-group>\n            </el-form-item>\n            <el-form-item v-if=\"form.port_mode\" label=\"自定义端口\" class=\"is-required\">\n              <el-input type=\"textarea\" v-model=\"form.port_list\" :autosize=\"{ minRows: 3, maxRows: 6}\" placeholder=\"格式:21,22,25,80,443,3306,8080,27017\"></el-input>\n            </el-form-item>\n            <el-form-item v-else label=\"默认端口\">\n              <el-input type=\"textarea\" v-model=\"port_list\" :autosize=\"{ minRows: 3, maxRows: 6}\" disabled></el-input>\n            </el-form-item>\n            <el-form-item>\n              <el-button v-if=\"isEditPage\" type=\"danger\" :disabled=\"submitBtnDisabled\" @click=\"onUpdate()\">提交修改</el-button>\n              <el-button v-else type=\"primary\" :disabled=\"submitBtnDisabled\" @click=\"onSubmit()\">立即创建</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </el-card>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { GetConfig } from \"@/api/sys_config\"\nimport { InfoDetail, AddAsset } from \"@/api/instance\"\n\nexport default {\n    data() {\n        return {\n        isEditPage: false, //是创建还是修改任务的页面？\n        submitBtnDisabled: false,\n        title: \"创建资产任务\",\n        port_list: '21,22,23,24,25',  // 系统端口\n        form: {\n            \"name\": \"\",\n            \"port_list\": \"21, 22, 80, 445, 3389, 8080, 27017\",\n            \"target\": \"zan7.com\",  // 单个\n            \"recursion\": 0,\n            \"open_web\": 0,\n            \"open_poc\": 0,\n            \"open_auth\": 0,\n            \"port_mode\": 0,  // 0系统默认\n        },\n        task_id: undefined,\n    };\n  },\n  created() {\n        this.getDataCfg()\n        let id = this.$route.query.id\n        if (id) { //点击修改页面的跳转id uri参数(?id=64)\n            // 如果有id,查DB进行赋值\n            this.title = \"修改资产任务\"\n            this.isEditPage = true\n            this.isLoading = true\n            this.task_id = id\n            this.getDetail(id)\n        }\n  },\n    methods: {\n        // 表格格式检查\n        formCheck() {\n            if (this.form.name.trim() == \"\") { this.$message({ message: \"任务名必填\", type: \"warning\" }); return false }\n            if (this.form.target.trim() == \"\") { this.$message({ message: \"目标必填\", type: \"warning\" }); return false }\n            if (this.form.port_list.trim() == \"\") { this.form.port_mode = 0 } // 使用默认端口\n            return true\n        },\n        // 关闭子页\n        closeChildPage() {\n            this.$router.go(-1)\n            this.$store.state.tagsView.visitedViews.splice(this.$store.state.tagsView.visitedViews.findIndex(item => item.path === this.$route.path), 1)\n            this.$router.push(this.$store.state.tagsView.visitedViews[this.$store.state.tagsView.visitedViews.length - 1].path)\n        },\n        // 获取配置数据\n        getDataCfg(){\n            GetConfig().then((response) => {\n                this.port_list = response.data.port_list.join(', ')\n            }).catch(() => {\n                this.$notify({ title: \"Failed\", message: \"服务未得到响应\", type: \"error\", duration: 5000, });\n            });\n        },\n        // 更新任务\n        onUpdate() {\n            this.$notify({ title: \"Warning\", message: \"接口未实现\", type: \"warning\", duration: 5000});\n        //   if (!this.formCheck()) { return }\n        //   this.submitBtnDisabled = true\n        //   //1.组装数据\n        //   let temp = this.form\n        //   let target_list = temp.target_list.split('\\n')\n        //   let tlist = []\n          \n        //   for (let i=0; i<target_list.length; i++){\n        //       let item = target_list[i].trim()\n        //       if (item != \"\"){\n        //           tlist.push(item)\n        //       }\n        //   }\n        //   let putData = {\n        //     task_id: this.task_id, args: temp.args, recursion: temp.recursion, target_list: tlist, task_name: temp.task_name, service: temp.service,\n        //   }\n        //   //2.调API接口\n        //   PutTask(putData).then((response) => {\n        //     this.submitBtnDisabled = false;\n        //     this.clearFormData();\n        //     this.$notify({ title: response.data, message: \"Update Successfully\", type: \"success\", duration: 5000});\n        //     this.closeChildPage()\n        //   }).catch(() => {\n        //     this.submitBtnDisabled = false;\n        //     this.$notify({ title: \"Failed\", message: \"Failed Update\", type: \"error\", duration: 5000});\n        //   });\n        },\n        //创建任务\n        onSubmit() {\n            if (!this.formCheck()) { return }\n            this.submitBtnDisabled = true\n            //1.组装数据\n            let temp = this.form\n            let port_list = temp.port_list.split(',')\n            let plist = []\n            if (temp.port_mode!=0){\n                for (let i=0; i<port_list.length; i++){\n                    let item = port_list[i].trim()\n                    if (item != \"\"){plist.push(Number(item))}\n                }\n            }\n\n            let data = {\n                name: temp.name, port_list: plist, target: temp.target, recursion: temp.recursion, \n                open_web: temp.open_web, open_poc: temp.open_poc, open_auth: temp.open_auth, port_mode: temp.port_mode\n            }\n            console.log(data)\n            //2.调API接口\n            AddAsset(data).then((response) => {\n                this.submitBtnDisabled = false;\n                console.log(response)\n                this.$notify({ title: \"Success\", message: \"添加成功\" + response.errmsg + response.data.task_id, type: \"success\", duration: 5000, });\n                this.closeChildPage()\n            }).catch(() => {\n                this.submitBtnDisabled = false;\n                this.$notify({title: \"Failed\", message: \"添加失败\", type: \"error\", duration: 5000});\n            });\n        },\n        // 修改时，获取旧信息\n        getDetail(id) {\n            let query = { instance_id: id, simple: 1 }\n            InfoDetail(query).then((response) => {\n                let data = response.data\n                this.form = {\n                    name: data.name, port_list: data.port_list.join(', '),\n                    target: data.target, recursion: data.recursion,\n                    open_web: data.open_web, open_poc: data.open_poc,\n                    open_auth: data.open_auth, port_mode: data.port_mode,\n                }\n            }).catch(() => {\n                this.submitBtnDisabled = false;\n                this.$notify({title: 'Failed', message: \"Failed Get AssetTask info\", type: \"error\", duration: 5000});\n            });\n        },\n    }\n}\n</script>\n\n<style>\n.mixin-components-container {\n  background-color: #f0f2f5;\n  padding: 30px;\n  min-height: calc(100vh - 84px);\n}\n.text {\n  font-size: 14px;\n}\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n}\n.clearfix:after {\n  clear: both;\n}\n.box-card-in {\n  width: 60%;\n}\n.dump-box {\n  font-weight: 700;\n  color: #606266;\n}\n</style>"]}]}