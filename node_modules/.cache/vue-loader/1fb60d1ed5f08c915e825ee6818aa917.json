{"remainingRequest":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/aquaman_view/src/views/auth-tester/task.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/views/aquaman_view/src/views/auth-tester/task.vue","mtime":1605274594102},{"path":"/home/views/aquaman_view/node_modules/css-loader/dist/cjs.js","mtime":1601261329179},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1601261366078},{"path":"/home/views/aquaman_view/node_modules/postcss-loader/src/index.js","mtime":1601261365169},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js","mtime":1601261366062}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1peGluLWNvbXBvbmVudHMtY29udGFpbmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMmY1OwogIHBhZGRpbmc6IDMwcHg7CiAgbWluLWhlaWdodDogY2FsYygxMDB2aCAtIDg0cHgpOwp9Ci50ZXh0IHsKICBmb250LXNpemU6IDE0cHg7Cn0KLmNsZWFyZml4OmJlZm9yZSwKLmNsZWFyZml4OmFmdGVyIHsKICBkaXNwbGF5OiB0YWJsZTsKICBjb250ZW50OiAiIjsKfQouY2xlYXJmaXg6YWZ0ZXIgewogIGNsZWFyOiBib3RoOwp9Ci5ib3gtY2FyZC1pbiB7CiAgd2lkdGg6IDYwJTsKfQouZHVtcC1ib3ggewogIGZvbnQtd2VpZ2h0OiA3MDA7CiAgY29sb3I6ICM2MDYyNjY7Cn0K"},{"version":3,"sources":["task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"task.vue","sourceRoot":"src/views/auth-tester","sourcesContent":["<template>\n  <div class=\"mixin-components-container\">\n    <el-row>\n      <el-card class=\"box-card\">\n        <div slot=\"header\" class=\"clearfix\">\n          <span>{{title}}</span>\n        </div>\n        <div style=\"margin-bottom:50px;\">\n          <el-form ref=\"form\" :model=\"form\" label-width=\"140px\">\n            <el-form-item label=\"任务名\" class=\"is-required\">\n              <el-input v-model=\"form.task_name\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"任务目标\" class=\"is-required\">\n              <el-input type=\"textarea\" v-model=\"form.target_list\" :autosize=\"{ minRows: 3, maxRows: 6}\" placeholder=\"格式:http://example.com,多条换行\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"任务周期\">\n              <el-select v-model=\"form.recursion\" placeholder=\"请选择\" style=\"width:200px\">\n                <el-option label=\"一次\" :value=\"0\"></el-option>\n                <el-option label=\"每天\" :value=\"1\"></el-option>\n                <el-option label=\"每周\" :value=\"7\"></el-option>\n                <el-option label=\"每月\" :value=\"30\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"参数\">\n              <el-input v-model=\"form.args\" placeholder=\"如添加参数如-t 20进行设置线程数、-s 2121设置非默认端口, 具体可看hydra命令参数文档\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"协议选择\">\n              <el-select v-model=\"form.service\" multiple filterable placeholder=\"请选择\" style=\"width:100%\">\n                <el-option v-for=\"(index,item) in service_list\" :key=\"item\" :label=\"index\" :value=\"index\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"账户字典\"> \n                <el-input type=\"textarea\" :rows=\"2\" placeholder=\"null\" v-model=\"username_list\" disabled></el-input> \n            </el-form-item>\n            <el-form-item label=\"密码字典\"> \n                <el-input type=\"textarea\" :rows=\"2\" placeholder=\"null\" v-model=\"password_list\" disabled></el-input> \n            </el-form-item>\n            <el-form-item>\n              <el-button v-if=\"isEditPage\" type=\"danger\" :disabled=\"submitBtnDisabled\" @click=\"onUpdate()\">提交修改</el-button>\n              <el-button v-else type=\"primary\" :disabled=\"submitBtnDisabled\" @click=\"onSubmit()\">立即创建</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </el-card>\n    </el-row>\n  </div>\n</template>\n\n<script>\n// import { UpdateTask } from \"@/api/mars\";\nimport { ConfigData, AddTask, TaskDetail, PutTask } from \"@/api/auth_tester\"\n// import { date } from 'jszip/lib/defaults';\nexport default {\n  data() {\n    return {\n      isEditPage: false, //是创建还是修改任务的页面？\n      submitBtnDisabled: false,\n      title: \"创建任务\",\n      form: {\n        args: \"\",\n        recursion: 0,\n        target_list: \"\",\n        task_name: \"\",\n        service: [],\n      },\n      username_list: \"\",\n      password_list: \"\",\n      service_list: [\n          \"ASTERISK\", \"CISCO\", \"CISCO-ENABLE\", \"CVS\",\"FIREBIRD\",\"FTP\",\"FTPS\",\"HTTP_PROXY\",\"HTTP_PROXY-URLENUM\",\"ICQ\",\"IMAP\",\"IRC\",\"LDAP2\",\n          \"MSSQL\",\"MYSQL\",\"NNTP\",\"ORACLE-LISTENER\",\"ORACLE-SID\",\"PCANYWHERE\",\"PCNFS\",\"POP3\",\"POSTGRES\",\"RDP\",\"REDIS\",\"REXEC\",\"RLOGIN\",\"RSH\",\n          \"S7-300\",\"SIP\",\"SMB\",\"SMTP\",\"SMTP-ENUM\",\"SNMP\",\"SOCKS5\",\"SSH\",\"SSHKEY\",\"SVN\",\"TEAMSPEAK\",\"TELNET\",\"VMAUTHD\",\"VNC\",\"XMPP\"\n      ],\n      task_id: undefined,\n    };\n  },\n  created() {\n    this.getDataCfg()\n    let id = this.$route.query.id\n    if (id) { //点击修改页面的跳转id uri参数(?id=64)\n      // 如果有id,查DB进行赋值\n      this.title = \"修改任务\"\n      this.isEditPage = true\n      this.isLoading = true\n      this.task_id = id\n      this.getDetail(id)\n    }\n  },\n  methods: {\n    // 表格格式检查\n    formCheck() {\n      if (this.form.task_name.trim() == \"\") { this.$message({ message: \"任务名必填\", type: \"warning\" }); return false }\n      if (this.form.target_list.trim() == \"\") { this.$message({ message: \"任务目标必填\", type: \"warning\" }); return false }\n      if (this.form.service.length == 0) { this.$message({ message: \"协议至少选择一项\", type: \"warning\" }); return false }\n      return true\n    },\n    // 关闭子页\n    closeChildPage() {\n      this.$router.go(-1)\n      this.$store.state.tagsView.visitedViews.splice(this.$store.state.tagsView.visitedViews.findIndex(item => item.path === this.$route.path), 1)\n      this.$router.push(this.$store.state.tagsView.visitedViews[this.$store.state.tagsView.visitedViews.length - 1].path)\n    },\n    // 获取配置数据\n    getDataCfg(){\n        ConfigData().then((response) => {\n            this.username_list = response.data.username_list + []\n            this.password_list = response.data.password_list + []\n            this.service_list = response.data.service\n            // console.log(response.data)\n      }).catch(() => {\n        this.$notify({ title: \"Failed\", message: \"服务未得到响应\", type: \"error\", duration: 5000, });\n      });\n    },\n    // 更新任务\n    onUpdate() {\n      if (!this.formCheck()) { return }\n      this.submitBtnDisabled = true\n      //1.组装数据\n      let temp = this.form\n      let target_list = temp.target_list.split('\\n')\n      let tlist = []\n      \n      for (let i=0; i<target_list.length; i++){\n          let item = target_list[i].trim()\n          if (item != \"\"){\n              tlist.push(item)\n          }\n      }\n      let putData = {\n        task_id: this.task_id, args: temp.args, recursion: temp.recursion, target_list: tlist, task_name: temp.task_name, service: temp.service,\n      }\n      //2.调API接口\n      PutTask(putData).then((response) => {\n        this.submitBtnDisabled = false;\n        this.clearFormData();\n        this.$notify({ title: response.data, message: \"Update Successfully\", type: \"success\", duration: 5000});\n        this.closeChildPage()\n      }).catch(() => {\n        this.submitBtnDisabled = false;\n        this.$notify({ title: \"Failed\", message: \"Failed Update\", type: \"error\", duration: 5000});\n      });\n    },\n    //创建任务\n    onSubmit() {\n      if (!this.formCheck()) { return }\n      this.submitBtnDisabled = true\n      //1.组装数据\n      let temp = this.form\n      let target_list = temp.target_list.split('\\n')\n      let tlist = []\n      \n      for (let i=0; i<target_list.length; i++){\n          let item = target_list[i].trim()\n          if (item != \"\"){\n              tlist.push(item)\n          }\n      }\n      let data = {\n        args: temp.args, recursion: temp.recursion, target_list: tlist, task_name: temp.task_name, service: temp.service,\n      }\n      //2.调API接口\n      AddTask(data).then((response) => {\n        this.submitBtnDisabled = false;\n        this.clearFormData();\n        this.$notify({ title: \"Success\", message: \"添加成功\" + response.errmsg + response.data.task_id, type: \"success\", duration: 5000, });\n        this.closeChildPage()\n      }).catch(() => {\n        this.submitBtnDisabled = false;\n        this.$notify({title: \"Failed\", message: \"添加失败\", type: \"error\", duration: 5000});\n      });\n    },\n    // 提交成功清空当前页面数据\n    clearFormData() {\n      this.form = { args: \"\", recursion: 0, target_list: \"\", task_name: \"\", service: [] }\n    },\n    getDetail(id) {\n      let query = { task_id: id }\n      TaskDetail(query).then((response) => {\n        this.submitBtnDisabled = false;\n        this.form.task_name = response.data.task_name;\n        this.form.service = response.data.service;\n        this.form.args = response.data.args;\n        this.form.recursion = response.data.recursion;\n        for (let i=0;i<response.data.target.length;i++){\n            this.form.target_list = this.form.target_list + response.data.target[i] + '\\n'\n            console.log(this.form.target_list)\n        }\n      }).catch(() => {\n        this.submitBtnDisabled = true;\n      });\n    },\n  }\n}\n</script>\n\n<style>\n.mixin-components-container {\n  background-color: #f0f2f5;\n  padding: 30px;\n  min-height: calc(100vh - 84px);\n}\n.text {\n  font-size: 14px;\n}\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n}\n.clearfix:after {\n  clear: both;\n}\n.box-card-in {\n  width: 60%;\n}\n.dump-box {\n  font-weight: 700;\n  color: #606266;\n}\n</style>"]}]}