{"remainingRequest":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/aquaman_view/src/views/asset/task_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/views/aquaman_view/src/views/asset/task_list.vue","mtime":1605767254817},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/babel-loader/lib/index.js","mtime":1601261365222},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js","mtime":1601261366062}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IERpc2NvdmVyeUxpc3QsIERlbERpc2NvdmVyeSwgRXhlRGlzY292ZXJ5LCBQb3J0SW5mb0xpc3QgfSBmcm9tICJAL2FwaS9pbnN0YW5jZSIKaW1wb3J0IHdhdmVzIGZyb20gIkAvZGlyZWN0aXZlL3dhdmVzIjsgLy8gd2F2ZXMgZGlyZWN0aXZlCmltcG9ydCBQYWdpbmF0aW9uIGZyb20gIkAvY29tcG9uZW50cy9QYWdpbmF0aW9uIjsgLy8gc2Vjb25kYXJ5IHBhY2thZ2UgYmFzZWQgb24gZWwtcGFnaW5hdGlvbgoKY29uc3QgU3RhdHVzT3B0aW9ucyA9IFsKICAgIHsga2V5OiAiMCIsIGRpc3BsYXlfbmFtZTogIuS4gOasoSIgfSwKICAgIHsga2V5OiAiMSIsIGRpc3BsYXlfbmFtZTogIuavj+WkqSIgfSwKICAgIHsga2V5OiAiNyIsIGRpc3BsYXlfbmFtZTogIuavj+WRqCIgfSwKICAgIHsga2V5OiAiMzAiLCBkaXNwbGF5X25hbWU6ICLmr4/mnIgiIH0sCl07Cgpjb25zdCBsb2FkVHlwZUtleVZhbHVlID0gU3RhdHVzT3B0aW9ucy5yZWR1Y2UoKGFjYywgY3VyKSA9PiB7CiAgICBhY2NbY3VyLmtleV0gPSBjdXIuZGlzcGxheV9uYW1lOwogICAgcmV0dXJuIGFjYzsKfSwge30pOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogImluc3RhbmNlaW5mb19saXN0IiwKICAgIGNvbXBvbmVudHM6IHsgUGFnaW5hdGlvbiB9LAogICAgZGlyZWN0aXZlczogeyB3YXZlcyB9LAogICAgZmlsdGVyczogewogICAgICAgICAgICBsb2FkVHlwZUZpbHRlcih0eXBlKSB7cmV0dXJuIGxvYWRUeXBlS2V5VmFsdWVbdHlwZV19LAogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdGFibGVLZXk6IDAsCiAgICAgICAgICAgIGxpc3Q6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBfaWQ6ICI1Zjg5NWU4NDIzMGU0ZjFjNzhhYzdiOGIiLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+S7u+WKoUlECiAgICAgICAgICAgICAgICAgICAgY3JlYXRlX2F0OiAiMjAyMC0xMC0xNiAxNjo0OTowOCIsICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/liJvlu7rml7bpl7QKICAgICAgICAgICAgICAgICAgICB1cGRhdGVfYXQ6ICIyMDIwLTEwLTE5IDE4OjEzOjAzIiwgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+aJp+ihjOaXtumXtAogICAgICAgICAgICAgICAgICAgIGlzX2RlbGV0ZTogMCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v6L2v5Yig6Zmk5qCH6K6wCiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiAiMTcyLjMxLjUwLjAvMjQiLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/nvZHmrrUKICAgICAgICAgICAgICAgICAgICBuYW1lOiAi5byA5Y+R546v5aKD6LWE5Lqn5o6i5rWLIiwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+S7u+WKoeWQjQogICAgICAgICAgICAgICAgICAgIHBvcnRfbGlzdDogWzIyLDgwLDQ0NSwzMzA2LDgwODAsNTkwMSw5MjAwLDI3MDE3XSwgICAgICAgICAgIC8v55So5oi36Ieq5a6a5LmJ56uv5Y+jCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAiUHJvY2Vzc2luZyIsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/ku7vliqHnirbmgIEKICAgICAgICAgICAgICAgICAgICBvcGVuX3dlYjogMSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+W8gOWQr3dlYua8j+a0nuajgOa1iwogICAgICAgICAgICAgICAgICAgIG9wZW5fcG9jOiAxLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5byA5ZCvcG9j5ryP5rSe5qOA5rWLCiAgICAgICAgICAgICAgICAgICAgb3Blbl9hdXRoOiAxLCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/lvIDlkK/orqTor4Hmo4DmtYsKICAgICAgICAgICAgICAgICAgICB1c2VycG9ydDogMSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+eUqOaIt+iHquWumuS5ieerr+WPowogICAgICAgICAgICAgICAgICAgIHJlY3Vyc2lvbjogNywgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vMOS4gOasoSwx5q+P5aSpLDfmr4/lkagsMzDmr4/mnIgsCiAgICAgICAgICAgICAgICAgICAgdXNlcjogJ0FkbWluJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/mk43kvZzlkZggCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICBdLAogICAgICAgICAgICBkaWFsb2c6IGZhbHNlLAogICAgICAgICAgICBkaWFsb2dEYXRhOiB7fSwKICAgICAgICAgICAgZGlhbG9nUG9ydEluZm9MaXN0OltdLAogICAgICAgICAgICB0b3RhbDogMCwKICAgICAgICAgICAgbGlzdExvYWRpbmc6IGZhbHNlLAogICAgICAgICAgICBsaXN0UXVlcnk6IHtwYWdlX25vOiAxLCBwYWdlX3NpemU6IDIwLCBpbmZvOiAiIn0sCiAgICAgICAgfTsKICAgIH0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIGxldCB0YXNrX25hbWUgPSB0aGlzLiRyb3V0ZS5xdWVyeS50YXNrX25hbWUKICAgICAgICB0aGlzLmxpc3RRdWVyeS5pbmZvID0gdGFza19uYW1lCiAgICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC8vIOiOt+WPluWIl+ihqAogICAgICAgIGdldExpc3QoKSB7CiAgICAgICAgdGhpcy5saXN0ID0gW10KICAgICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZTsKICAgICAgICBEaXNjb3ZlcnlMaXN0KHRoaXMubGlzdFF1ZXJ5KS50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgICB0aGlzLmxpc3QgPSByZXNwb25zZS5kYXRhLmxpc3Q7CiAgICAgICAgICAgIHRoaXMudG90YWwgPSByZXNwb25zZS5kYXRhLnRvdGFsOwogICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOyB9LCAxICogMTAwMCk7CiAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICAvLyDmoLnmja7ljZXkuKrlrp7kvovvvIzojrflj5blroPnmoTnq6/lj6Pkv6Hmga/liJfooagKICAgICAgICBnZXRfcG9ydGluZm8oaW5zdGFuY2VfaWQpewogICAgICAgICAgICBsZXQgcXVlcnkgPSB7cGFnZV9ubzogMSwgcGFnZV9zaXplOiAxMDAwLCBpbmZvOiBpbnN0YW5jZV9pZH0KICAgICAgICAgICAgUG9ydEluZm9MaXN0KHF1ZXJ5KS50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5kaWFsb2dQb3J0SW5mb0xpc3QgPSByZXNwb25zZS5kYXRhLmxpc3Q7CiAgICAgICAgICAgICAgICB0aGlzLmRpYWxvZyA9IHRydWUKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICAvLyDlhbPplK7or43mn6Xor6IKICAgICAgICBoYW5kbGVGaWx0ZXIoKSB7CiAgICAgICAgdGhpcy5saXN0UXVlcnkucGFnZV9ubyA9IDE7CiAgICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICAgICAgfSwKICAgICAgICAvLyDliKDpmaTorrDlvZUKICAgICAgICBoYW5kbGVEZWxldGUocm93LCBpbmRleCkgewogICAgICAgICAgICB0aGlzLiRjb25maXJtKCLmraTmk43kvZzlsIbliKDpmaTor6XorrDlvZUsIOaYr+WQpue7p+e7rT8iLCAi5o+Q56S6IiwgewogICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICLnoa7lrpoiLAogICAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIuWPlua2iCIsCiAgICAgICAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICAgIH0pLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgRGVsRGlzY292ZXJ5KHsgaWQ6IHJvdy5faWQgfSkudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRub3RpZnkoeyB0aXRsZTogIlN1Y2Nlc3MiLCBtZXNzYWdlOiAiRGVsZXRlIFN1Y2Nlc3NmdWxseSIgKyByZXNwb25zZS5kYXRhLmVycm1zZywgdHlwZTogInN1Y2Nlc3MiLCBkdXJhdGlvbjogMzAwMCwgfSk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5saXN0LnNwbGljZShpbmRleCwgMSk7CiAgICAgICAgICAgICAgICB9KS5jYXRjaCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kbm90aWZ5KHt0aXRsZTogIkZhaWxlZCIsIG1lc3NhZ2U6ICJGYWlsZWQgRGVsZXRlIiwgdHlwZTogImRhbmdlciIsIGR1cmF0aW9uOiA1MDAwfSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIGhhbmRsZURpYWxvZyhyb3cpewogICAgICAgICAgICB0aGlzLmRpYWxvZ0RhdGEgPSByb3cKICAgICAgICAgICAgdGhpcy5kaWFsb2cgPSB0cnVlCiAgICAgICAgfSwKICAgICAgICByZXNjYW4ocm93KXsKICAgICAgICAgICAgRXhlRGlzY292ZXJ5KHsiaWQiOiByb3cuX2lkfSkudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKQogICAgICAgICAgICAgICAgdGhpcy4kbm90aWZ5KHt0aXRsZTogIlN1Y2Nlc3MiLCBtZXNzYWdlOiAiUmVzY2FuIFN1Y2Nlc3NmdWxseSIsIHR5cGU6ICJzdWNjZXNzIiwgZHVyYXRpb246IDUwMDB9KTsKICAgICAgICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpIC8v5Yi35paw5YiX6KGoCiAgICAgICAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7dGl0bGU6ICJGYWlsZWQiLCBtZXNzYWdlOiAiRmFpbGVkIEV4ZWN0ZSBSZXNjYW4uIiwgdHlwZTogImRhbmdlciIsIGR1cmF0aW9uOiA1MDAwfSk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgIH0sCn07Cg=="},{"version":3,"sources":["task_list.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"task_list.vue","sourceRoot":"src/views/asset","sourcesContent":["<!--资产任务列表-->\n<template>\n    <div class=\"app-container\">\n        <div class=\"filter-container\">\n            <el-input v-model=\"listQuery.info\" placeholder=\"Target\" style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n            <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">Search</el-button>\n            <router-link :to=\"'/asset/discovery/task_create'\">\n                <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\">Add</el-button>\n            </router-link>\n        </div>\n\n        <el-dialog title=\"任务预览\" :visible.sync=\"dialog\" width=\"80%\">\n            <pre overflow=\"hidden\">{{dialogData}}</pre>\n        </el-dialog>\n\n        <el-table :key=\"tableKey\" v-loading=\"listLoading\" element-loading-text=\"玩命加载中\" element-loading-spinner=\"el-icon-loading\" element-loading-background=\"rgba(0, 0, 0, 0.8)\" \n        :data=\"list\" border fit highlight-current-row style=\"width: 100%;\" :default-sort = \"{prop: 'update_at', order: 'descending'}\">\n            <el-table-column label=\"资产名\" width=\"150px\" align=\"center\">\n                <template slot-scope=\"{row}\">\n                    <!-- <router-link :to=\"'/asset/info?instance_id='+row._id\"> -->\n                        <el-button type=\"text\" size=\"mini\" class=\"operation-btn\">{{ row.name }}</el-button>\n                    <!-- </router-link> -->\n                </template>\n            </el-table-column>\n            <el-table-column label=\"探测目标\" min-width=\"15px\" align=\"center\">\n                <template slot-scope=\"{row}\">\n                    <span>{{row.target}}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"Banner\" min-width=\"30px\" align=\"center\">\n                <template slot-scope=\"{row}\">\n                    <el-tag v-if=\"row.open_auth\" type=\"info\">权限爆破</el-tag>\n                    <el-tag v-if=\"row.open_poc\" type=\"warning\">漏洞检测</el-tag>\n                    <el-tag v-if=\"row.open_web\" type=\"danger\">Web渗透</el-tag>\n                    <el-tag v-if=\"row.user_port\" type=\"success\">自定义端口</el-tag>\n                    <el-tag v-else type=\"success\">默认端口</el-tag>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"扫描周期\" width=\"100px\" align=\"center\">\n                <template slot-scope=\"{row}\">\n                    <span>{{ row.recursion|loadTypeFilter }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"操作员\" width=\"120px\" align=\"center\">\n                <template slot-scope=\"{row}\">\n                    <span>{{ row.user }}</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"检测状态\" width=\"120px\" align=\"center\">\n                <template slot-scope=\"{row}\">\n                <el-tag v-if=\"row.status=='Completed'\" effect=\"dark\" type=\"success\">\n                    <i  class=\"el-icon-finished\"  style=\"margin-left:2%\">{{ row.status }}</i>\n                </el-tag>\n                <el-tag v-else-if=\"row.status=='New'\">\n                    <i  class=\"el-icon-video-play\" style=\"margin-left:2%\" >{{ row.status }}</i>\n                </el-tag>\n                <el-tag v-else>\n                    <i  class=\"el-icon-loading\" style=\"margin-left:2%\" >{{ row.status }}</i>\n                </el-tag>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"扫描时间\" width=\"160px\" align=\"center\" prop=\"update_at\" sortable>\n                <template slot-scope=\"{row}\"><span>{{ row.update_at }}</span></template>\n            </el-table-column>\n            <el-table-column fixed=\"right\" label=\"Operation\" align=\"center\" width=\"120px\" class-name=\"small-padding fixed-width\">\n                <template slot-scope=\"{row,$index}\">\n                    <el-dropdown :hide-on-click=\"false\">\n                        <span class=\"el-dropdown-link\">选项卡<i class=\"el-icon-arrow-down el-icon--right\"></i></span>\n                        <el-dropdown-menu slot=\"dropdown\">\n                        <el-dropdown-item><el-button type=\"text\" @click=\"handleDialog(row)\">任务详情</el-button></el-dropdown-item>\n                        <el-dropdown-item>\n                            <router-link :to=\"'/asset/discovery/task_edit?id='+row._id\">\n                            <el-button type=\"text\" class=\"operation-btn\">编辑任务</el-button>\n                            </router-link>\n                        </el-dropdown-item>\n                        <el-dropdown-item>\n                            <el-button type=\"text\" @click=\"rescan(row)\">立即重扫</el-button>\n                        </el-dropdown-item>\n                        <el-dropdown-item>\n                            <el-button type=\"text\" @click=\"handleDelete(row,$index)\">删除任务</el-button>\n                        </el-dropdown-item>\n                        </el-dropdown-menu>\n                    </el-dropdown>\n                </template>\n            </el-table-column>\n        </el-table>\n        <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page_no\" :limit.sync=\"listQuery.page_size\" @pagination=\"getList\" />\n    </div>\n</template>\n\n<script>\nimport { DiscoveryList, DelDiscovery, ExeDiscovery, PortInfoList } from \"@/api/instance\"\nimport waves from \"@/directive/waves\"; // waves directive\nimport Pagination from \"@/components/Pagination\"; // secondary package based on el-pagination\n\nconst StatusOptions = [\n    { key: \"0\", display_name: \"一次\" },\n    { key: \"1\", display_name: \"每天\" },\n    { key: \"7\", display_name: \"每周\" },\n    { key: \"30\", display_name: \"每月\" },\n];\n\nconst loadTypeKeyValue = StatusOptions.reduce((acc, cur) => {\n    acc[cur.key] = cur.display_name;\n    return acc;\n}, {});\n\nexport default {\n    name: \"instanceinfo_list\",\n    components: { Pagination },\n    directives: { waves },\n    filters: {\n            loadTypeFilter(type) {return loadTypeKeyValue[type]},\n    },\n    data() {\n        return {\n            tableKey: 0,\n            list: [\n                {\n                    _id: \"5f895e84230e4f1c78ac7b8b\",                            //任务ID\n                    create_at: \"2020-10-16 16:49:08\",                           //创建时间\n                    update_at: \"2020-10-19 18:13:03\",                           //执行时间\n                    is_delete: 0,                                               //软删除标记\n                    target: \"172.31.50.0/24\",                                      //网段\n                    name: \"开发环境资产探测\",                                    //任务名\n                    port_list: [22,80,445,3306,8080,5901,9200,27017],           //用户自定义端口\n                    status: \"Processing\",                                       //任务状态\n                    open_web: 1,                                                //开启web漏洞检测\n                    open_poc: 1,                                                //开启poc漏洞检测\n                    open_auth: 1,                                               //开启认证检测\n                    userport: 1,                                                //用户自定义端口\n                    recursion: 7,                                               //0一次,1每天,7每周,30每月,\n                    user: 'Admin'                                               //操作员 \n                },\n            ],\n            dialog: false,\n            dialogData: {},\n            dialogPortInfoList:[],\n            total: 0,\n            listLoading: false,\n            listQuery: {page_no: 1, page_size: 20, info: \"\"},\n        };\n    },\n    created() {\n        let task_name = this.$route.query.task_name\n        this.listQuery.info = task_name\n        this.getList();\n    },\n    methods: {\n        // 获取列表\n        getList() {\n        this.list = []\n        this.listLoading = true;\n        DiscoveryList(this.listQuery).then((response) => {\n            this.list = response.data.list;\n            this.total = response.data.total;\n            setTimeout(() => { this.listLoading = false; }, 1 * 1000);\n        });\n        },\n        // 根据单个实例，获取它的端口信息列表\n        get_portinfo(instance_id){\n            let query = {page_no: 1, page_size: 1000, info: instance_id}\n            PortInfoList(query).then((response) => {\n                this.dialogPortInfoList = response.data.list;\n                this.dialog = true\n            });\n        },\n        // 关键词查询\n        handleFilter() {\n        this.listQuery.page_no = 1;\n        this.getList();\n        },\n        // 删除记录\n        handleDelete(row, index) {\n            this.$confirm(\"此操作将删除该记录, 是否继续?\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\",\n            }).then(() => {\n                DelDiscovery({ id: row._id }).then((response) => {\n                    this.$notify({ title: \"Success\", message: \"Delete Successfully\" + response.data.errmsg, type: \"success\", duration: 3000, });\n                    this.list.splice(index, 1);\n                }).catch(() => {\n                    this.$notify({title: \"Failed\", message: \"Failed Delete\", type: \"danger\", duration: 5000});\n                });\n            })\n        },\n        handleDialog(row){\n            this.dialogData = row\n            this.dialog = true\n        },\n        rescan(row){\n            ExeDiscovery({\"id\": row._id}).then((response) => {\n                console.log(response)\n                this.$notify({title: \"Success\", message: \"Rescan Successfully\", type: \"success\", duration: 5000});\n                this.getList() //刷新列表\n            }).catch(() => {\n                this.$notify({title: \"Failed\", message: \"Failed Execte Rescan.\", type: \"danger\", duration: 5000});\n            });\n        }\n    },\n};\n</script>\n\n<style>\n.operation-btn {\n  margin-right: 0px;\n}\npre{\n    white-space: pre-wrap;\n    word-wrap: break-word;\n}\n</style>"]}]}