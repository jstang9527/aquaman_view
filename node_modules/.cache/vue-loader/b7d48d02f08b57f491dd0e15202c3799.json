{"remainingRequest":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/aquaman_view/src/views/dashboard/index.vue?vue&type=style&index=0&id=106c86ed&lang=scss&scoped=true&","dependencies":[{"path":"/home/views/aquaman_view/src/views/dashboard/index.vue","mtime":1601344911853},{"path":"/home/views/aquaman_view/node_modules/css-loader/dist/cjs.js","mtime":1601261329179},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1601261366078},{"path":"/home/views/aquaman_view/node_modules/postcss-loader/src/index.js","mtime":1601261365169},{"path":"/home/views/aquaman_view/node_modules/sass-loader/dist/cjs.js","mtime":1601261354159},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js","mtime":1601261366062}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kYXNoYm9hcmQtZWRpdG9yLWNvbnRhaW5lciB7CiAgcGFkZGluZzogMzJweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQwLCAyNDIsIDI0NSk7CiAgcG9zaXRpb246IHJlbGF0aXZlOwoKICAuZ2l0aHViLWNvcm5lciB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDBweDsKICAgIGJvcmRlcjogMDsKICAgIHJpZ2h0OiAwOwogIH0KCiAgLmNoYXJ0LXdyYXBwZXIgewogICAgYmFja2dyb3VuZDogI2ZmZjsKICAgIHBhZGRpbmc6IDE2cHggMTZweCAwOwogICAgbWFyZ2luLWJvdHRvbTogMzJweDsKICB9Cn0KCkBtZWRpYSAobWF4LXdpZHRoOjEwMjRweCkgewogIC5jaGFydC13cmFwcGVyIHsKICAgIHBhZGRpbmc6IDhweDsKICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/dashboard","sourcesContent":["<template>\n  <div class=\"dashboard-editor-container\">\n    <panel-group :data=\"panelGroupData\" />\n    <el-row :gutter=\"32\">\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"16\">\n        <div class=\"chart-wrapper\">\n          <line-chart :chart-data=\"lineChartData\" />\n        </div>\n      </el-col>\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"8\">\n        <div class=\"chart-wrapper\">\n          <pie-chart :chart-data=\"pieChartData\" />\n        </div>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport PanelGroup from './components/PanelGroup'\nimport LineChart from './components/LineChart'\nimport PieChart from './components/PieChart'\n// import { panelGroupData, flowStat, serviceStat } from '@/api/dashboard'\n\nexport default {\n  name: 'DashboardAdmin',\n  components: {\n    PanelGroup,\n    LineChart,\n    PieChart\n  },\n  data() {\n    return {\n      panelGroupData: {\n        'serviceNum': 23,\n        'todayRequestNum': 1200,\n        'currentQps': 200,\n        'appNum': 5\n      },\n      lineChartData: {\n        'title': '今日流量统计',\n        'today': [],\n        'yesterday': []\n      },\n      pieChartData: {\n        'title': '弱口令',\n        'legend': [],\n        'series': []\n      }\n    }\n  },\n  created() {\n    // this.fetchPanelGroupData()\n    // this.fetchFlowStat()\n    // this.fetchServiceStat()\n  },\n  methods: {\n    fetchPanelGroupData() {\n      // panelGroupData({ }).then(response => {\n      //   this.panelGroupData = response.data\n      // }).catch(() => {\n      // })\n    },\n    fetchFlowStat() {\n      // flowStat({ }).then(response => {\n      //   this.lineChartData.today = response.data.today\n      //   this.lineChartData.yesterday = response.data.yesterday\n      // }).catch(() => {\n      // })\n    },\n    fetchServiceStat() {\n      // serviceStat({ }).then(response => {\n      //   this.pieChartData.legend = response.data.legend\n      //   this.pieChartData.series = response.data.data\n      // }).catch(() => {\n      // })\n    },\n    handleSetLineChartData() {\n      // this.lineChartData = lineChartData[type]\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard-editor-container {\n  padding: 32px;\n  background-color: rgb(240, 242, 245);\n  position: relative;\n\n  .github-corner {\n    position: absolute;\n    top: 0px;\n    border: 0;\n    right: 0;\n  }\n\n  .chart-wrapper {\n    background: #fff;\n    padding: 16px 16px 0;\n    margin-bottom: 32px;\n  }\n}\n\n@media (max-width:1024px) {\n  .chart-wrapper {\n    padding: 8px;\n  }\n}\n</style>\n\n"]}]}