{"remainingRequest":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/aquaman_view/src/views/mars/task.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/views/aquaman_view/src/views/mars/task.vue","mtime":1601261308749},{"path":"/home/views/aquaman_view/node_modules/css-loader/dist/cjs.js","mtime":1601261329179},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1601261366078},{"path":"/home/views/aquaman_view/node_modules/postcss-loader/src/index.js","mtime":1601261365169},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js","mtime":1601261366062}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5taXhpbi1jb21wb25lbnRzLWNvbnRhaW5lciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjJmNTsKICBwYWRkaW5nOiAzMHB4OwogIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSA4NHB4KTsKfQoudGV4dCB7CiAgZm9udC1zaXplOiAxNHB4Owp9Ci5jbGVhcmZpeDpiZWZvcmUsCi5jbGVhcmZpeDphZnRlciB7CiAgZGlzcGxheTogdGFibGU7CiAgY29udGVudDogIiI7Cn0KLmNsZWFyZml4OmFmdGVyIHsKICBjbGVhcjogYm90aDsKfQouYm94LWNhcmQtaW4gewogIHdpZHRoOiA2MCU7Cn0KLmR1bXAtYm94IHsKICBmb250LXdlaWdodDogNzAwOwogIGNvbG9yOiAjNjA2MjY2Owp9Cg=="},{"version":3,"sources":["task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"task.vue","sourceRoot":"src/views/mars","sourcesContent":["<template>\n  <div class=\"mixin-components-container\">\n    <el-row>\n      <el-card class=\"box-card\">\n        <div slot=\"header\" class=\"clearfix\">\n          <span>{{title}}</span>\n        </div>\n        <div style=\"margin-bottom:50px;\">\n          <el-form ref=\"form\" :model=\"form\" label-width=\"140px\">\n            <el-form-item label=\"任务名\" class=\"is-required\">\n              <el-input v-model=\"form.task_name\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"任务目标\" class=\"is-required\">\n              <el-input type=\"textarea\" v-model=\"form.target_list\" :autosize=\"{ minRows: 2, maxRows: 4}\" placeholder=\"格式:http://example.com,多条换行\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"开启Web漏洞扫描\">\n              <el-switch v-model=\"form.open_web\" active-color=\"#13ce66\" :active-value=\"1\" :inactive-value=\"0\" />\n            </el-form-item>\n            <el-form-item v-if=\"form.open_web\" label=\"扫描类型\">\n              <el-select v-model=\"form.scan_type\" placeholder=\"请选择\" style=\"width:200px\">\n                <el-option label=\"完全扫描\" :value=\"1\"></el-option>\n                <el-option label=\"高危扫描\" :value=\"2\"></el-option>\n                <el-option label=\"XSS检测\" :value=\"3\"></el-option>\n                <el-option label=\"SQL注入\" :value=\"4\"></el-option>\n                <el-option label=\"弱口令检测\" :value=\"5\"></el-option>\n                <el-option label=\"Web指纹\" :value=\"6\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"开启Poc检测\">\n              <el-switch v-model=\"form.open_poc\" active-color=\"#13ce66\" :active-value=\"1\" :inactive-value=\"0\" />\n            </el-form-item>\n            <el-form-item v-if=\"form.open_poc\" label=\"选择协议\">\n              <el-select v-model=\"form.protocol\" multiple placeholder=\"请选择\" size=\"medium\">\n                <el-option v-for=\"(index,item) in options\" :key=\"item\" :label=\"index\" :value=\"index\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"开启漏洞利用\">\n              <el-switch v-model=\"form.open_exp\" active-color=\"#FF4500\" :active-value=\"1\" :inactive-value=\"0\" />\n            </el-form-item>\n            <el-form-item>\n              <el-button v-if=\"isEditPage\" type=\"danger\" :disabled=\"submitBtnDisabled\" @click=\"onUpdate()\">提交修改</el-button>\n              <el-button v-else type=\"primary\" :disabled=\"submitBtnDisabled\" @click=\"onSubmit()\">立即创建</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </el-card>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { AddTask, UpdateTask, TaskDetail } from \"@/api/mars\";\nexport default {\n  data() {\n    return {\n      isEditPage: false, //是创建还是修改任务的页面？\n      submitBtnDisabled: false,\n      title: \"创建任务\",\n      form: {\n        task_name: \"\",\n        target_list: \"\", //\\n -> , 换行更换逗号\n        open_web: 1,\n        scan_type: undefined, //完全扫描\n        open_poc: 1,\n        protocol: [],  //协议 msf search xxx\n        open_exp: 1,\n      },\n      options: [\"SMB\", \"FTP\", \"RDP\", \"SSH\"],\n      task_id: undefined,\n    };\n  },\n  created() {\n    let id = this.$route.query.id\n    if (id) { //点击修改页面的跳转id uri参数(?id=64)\n      // 如果有id,查DB进行赋值\n      this.title = \"修改任务\"\n      this.isEditPage = true\n      this.isLoading = true\n      this.task_id = Number(id)\n      this.getDetail(id)\n    }\n  },\n  methods: {\n    // 表格格式检查\n    formCheck() {\n      if (this.form.task_name == \"\") { this.$message({ message: \"任务名必填\", type: \"warning\" }); return false }\n      if (this.form.target_list == \"\") { this.$message({ message: \"任务目标必填\", type: \"warning\" }); return false }\n      if (this.form.open_web == 1) {\n        if (!this.form.scan_type) { this.$message({ message: \"扫描类型必填\", type: \"warning\" }); return false }\n      }\n      if (this.form.open_poc == 1) {\n        if (this.form.protocol.length == 0) { this.$message({ message: \"协议必填\", type: \"warning\" }); return false }\n      }\n      return true\n    },\n    closeChildPage() {\n      this.$router.go(-1)\n      this.$store.state.tagsView.visitedViews.splice(this.$store.state.tagsView.visitedViews.findIndex(item => item.path === this.$route.path), 1)\n      this.$router.push(this.$store.state.tagsView.visitedViews[this.$store.state.tagsView.visitedViews.length - 1].path)\n    },\n    // 更新任务\n    onUpdate() {\n      if (!this.formCheck()) { return }\n      this.submitBtnDisabled = true\n      // //1.组装数据\n      this.form.target_list = this.form.target_list.replace(/\\n/g, \",\");\n      let putData = {\n        id: this.task_id,\n        task_name: this.form.task_name,\n        target_list: this.form.target_list,\n        open_web: this.form.open_web,\n        scan_type: this.form.scan_type,\n        open_poc: this.form.open_poc,\n        protocol: this.form.protocol,\n        open_exp: this.form.open_exp,\n      }\n      //2.调API接口\n      UpdateTask(putData).then((response) => {\n        this.submitBtnDisabled = false;\n        this.clearFormData();\n        console.log(response.data)\n        this.$notify({ title: response.data, message: \"更新成功 [id: \" + this.task_id + \" ]\", type: \"success\", duration: 5000, });\n        this.closeChildPage()\n      }).catch(() => {\n        this.submitBtnDisabled = false;\n        this.$notify({ title: \"Failed\", message: \"更新失败 [id: \" + this.task_id + \" ]\", type: \"error\", duration: 5000, });\n      });\n    },\n    //创建任务\n    onSubmit() {\n      if (!this.formCheck()) { return }\n      this.submitBtnDisabled = true\n      //1.组装数据\n      this.form.target_list = this.form.target_list.replace(/\\n/g, \",\");\n      //2.调API接口\n      AddTask(this.form).then((response) => {\n        this.submitBtnDisabled = false;\n        this.clearFormData();\n        this.$notify({ title: \"Success\", message: \"添加成功\" + response.data.errmsg, type: \"success\", duration: 5000, });\n      }).catch(() => {\n        this.submitBtnDisabled = false;\n      });\n    },\n    // 提交成功清空当前页面数据\n    clearFormData() {\n      this.form = {\n        task_name: \"\", target_list: \"\", open_web: 1, scan_type: undefined, open_poc: 1, protocol: [], open_exp: 1,\n      }\n    },\n    getDetail(id) {\n      let query = { id: id }\n      TaskDetail(query).then((response) => {\n        this.submitBtnDisabled = false;\n        this.form = response.data\n      }).catch(() => {\n        this.submitBtnDisabled = true;\n      });\n    },\n  }\n}\n</script>\n\n<style>\n.mixin-components-container {\n  background-color: #f0f2f5;\n  padding: 30px;\n  min-height: calc(100vh - 84px);\n}\n.text {\n  font-size: 14px;\n}\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n}\n.clearfix:after {\n  clear: both;\n}\n.box-card-in {\n  width: 60%;\n}\n.dump-box {\n  font-weight: 700;\n  color: #606266;\n}\n</style>"]}]}