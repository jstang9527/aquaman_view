{"remainingRequest":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/aquaman_view/src/views/chain/build_stream.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/views/aquaman_view/src/views/chain/build_stream.vue","mtime":1601261308746},{"path":"/home/views/aquaman_view/node_modules/css-loader/dist/cjs.js","mtime":1601261329179},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1601261366078},{"path":"/home/views/aquaman_view/node_modules/postcss-loader/src/index.js","mtime":1601261365169},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js","mtime":1601261366062}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucGFnaW5hdGlvbi1jb250YWluZXIgewogIG1hcmdpbi10b3A6IDBweDsKfQoucGFnaW5hdGlvbi1jb250YWluZXJbZGF0YS12LTcyMjMzYmNkXSB7CiAgcGFkZGluZzogMHB4Owp9Cg=="},{"version":3,"sources":["build_stream.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA;AACA;AACA","file":"build_stream.vue","sourceRoot":"src/views/chain","sourcesContent":["<template>\n  <div class=\"components-container\">\n    <div class=\"editor-container\">\n      <dnd-list :list1=\"list1\" :list2=\"list2\" list1-title=\"流水组装\" list2-title=\"组件工厂\" />\n    </div>\n    <div>\n      <el-button type=\"primary\" @click=\"onSubmit\" size=\"small\">立即构建</el-button>\n      <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page_no\" :limit.sync=\"listQuery.page_size\" @pagination=\"getData\" style=\"float:right;\" class=\"pagination-container pagination-container[data-v-72233bcd]\" />\n    </div>\n    <!--弹出组件-->\n    <el-dialog title=\"配置信息\" :visible.sync=\"dialog\">\n      <el-form ref=\"dataForm\" :model=\"dialogData\" label-position=\"left\" label-width=\"120px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"线名\" class=\"is-required\" style=\"width:500px;\">\n          <el-input v-model=\"dialogData.name\" />\n        </el-form-item>\n        <el-form-item label=\"描述/备注\" class=\"is-required\" style=\"width:500px;\">\n          <el-input v-model=\"dialogData.desc\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cancelConfirm()\">Cancel</el-button>\n        <el-button type=\"primary\" @click=\"onConfirm()\">Confirm</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport DndList from '@/components/DndList'\nimport Pagination from \"@/components/Pagination\";\nimport { blockList, chainAddStream } from \"@/api/chain\"\n\nexport default {\n  name: 'DndListDemo',\n  components: { DndList, Pagination },\n  data() {\n    return {\n      list1: [], //{ id: 1, author: \"xxx\", title: \"ads\" }\n      list2: [],\n      listQuery: { page_no: 1, page_size: 20, info: \"\", },\n      total: 0,\n      dialog: false,\n      dialogData: {\n        name: \"\",\n        desc: \"\"\n      }\n    }\n  },\n  created() {\n    this.getData()\n  },\n  methods: {\n    getData() {\n      this.listLoading = true\n      blockList(this.listQuery).then((response) => {\n        this.list2 = response.data.list\n        this.list1 = [this.list2[this.list2.length - 1]]\n        this.total = response.data.total;\n        setTimeout(() => { this.listLoading = false; }, 1.5 * 1000);\n      });\n    },\n    //提交行为链\n    onSubmit() {\n      if (this.list1.length == 0) { this.$message({ message: \"流水线是空的\", type: 'warning' }); return }\n      // console.log(this.list1)\n      this.dialog = true\n    },\n    // 提交dialog\n    onConfirm() {\n      if (this.dialogData.name == \"\") {\n        this.$message({ message: \"线名不能为空\", type: \"warning\" })\n        return\n      }\n      // 组装data数组\n      let blockIDList = []\n      for (let i = 0; i < this.list1.length; i++) {\n        blockIDList.push(this.list1[i].id)\n      }\n      let postData = { stream_name: this.dialogData.name, stream_desc: this.dialogData.desc, block_list: blockIDList }\n      // +++++ API接口\n      chainAddStream(postData).then((response) => {\n        this.$notify({ title: \"Success\", message: \"Create Successfully\" + response.data.errmsg, type: \"success\", duration: 4000, });\n        this.dialog = false\n      }).catch(() => {\n        this.$notify({\n          title: \"Error\", message: \"Server interval error\", type: \"danger\", duration: 5000,\n        });\n      });\n    },\n    // 取消dialog\n    cancelConfirm() {\n      this.dialog = false\n    }\n  }\n}\n</script>\n\n<style>\n.pagination-container {\n  margin-top: 0px;\n}\n.pagination-container[data-v-72233bcd] {\n  padding: 0px;\n}\n</style>"]}]}