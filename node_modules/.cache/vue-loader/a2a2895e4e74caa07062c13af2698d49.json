{"remainingRequest":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/aquaman_view/src/views/mars/report.vue?vue&type=style&index=0&id=d44ec2f8&lang=scss&scoped=true&","dependencies":[{"path":"/home/views/aquaman_view/src/views/mars/report.vue","mtime":1601261308749},{"path":"/home/views/aquaman_view/node_modules/css-loader/dist/cjs.js","mtime":1601261329179},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1601261366078},{"path":"/home/views/aquaman_view/node_modules/postcss-loader/src/index.js","mtime":1601261365169},{"path":"/home/views/aquaman_view/node_modules/sass-loader/dist/cjs.js","mtime":1601261354159},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js","mtime":1601261366062}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5qc29uLWVkaXRvciB7CiAgaGVpZ2h0OiAxMDAlOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKCiAgOjp2LWRlZXAgewogICAgLkNvZGVNaXJyb3IgewogICAgICBoZWlnaHQ6IGF1dG87CiAgICAgIG1pbi1oZWlnaHQ6IDMwMHB4OwogICAgfQoKICAgIC5Db2RlTWlycm9yLXNjcm9sbCB7CiAgICAgIG1pbi1oZWlnaHQ6IDMwMHB4OwogICAgfQoKICAgIC5jbS1zLXJ1YnlibHVlIHNwYW4uY20tc3RyaW5nIHsKICAgICAgY29sb3I6ICNmMDgwNDc7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"report.vue","sourceRoot":"src/views/mars","sourcesContent":["<template>\n  <div class=\"json-editor\">\n    <textarea ref=\"textarea\" />\n  </div>\n</template>\n\n<script>\nimport CodeMirror from 'codemirror'\nimport 'codemirror/addon/lint/lint.css'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/rubyblue.css'\nrequire('script-loader!jsonlint')\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/addon/lint/lint'\nimport 'codemirror/addon/lint/json-lint'\nimport { TaskReport } from \"@/api/mars\"\nimport { string } from 'jszip/lib/support'\n\nexport default {\n  name: 'JsonEditor',\n  /* eslint-disable vue/require-prop-types */\n  props: ['value'],\n  data() {\n    return {\n      jsonEditor: false,\n      id: undefined,\n    }\n  },\n  watch: {\n    value(value) {\n      const editorValue = this.jsonEditor.getValue()\n      if (value !== editorValue) {\n        this.jsonEditor.setValue(JSON.stringify(this.value, null, 2))\n      }\n    }\n  },\n  created() {\n    this.id = this.$route.query.id\n  },\n  mounted() {\n    this.jsonEditor = CodeMirror.fromTextArea(this.$refs.textarea, {\n      lineNumbers: true,\n      mode: 'application/json',\n      gutters: ['CodeMirror-lint-markers'],\n      theme: 'rubyblue',\n      lint: true\n    })\n    this.getValue()\n    this.getData(this.id)\n    // this.jsonEditor.setValue(JSON.stringify({ \"task_id\": \"f1c07f5e8329a98184902521c9ed656d\", \"pid\": 1, \"duration\": \"124.610001\", \"targets\": \"172.31.50.157,zan71.com,172.31.50.254\", \"hosts\": [{ \"target\": \"172.31.50.157\", \"addr_type\": \"ipv4\", \"services\": [{ \"port\": 3389, \"protocol\": \"tcp\", \"name\": \"ms-wbt-server\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 128 }] }, { \"target\": \"47.92.255.39\", \"addr_type\": \"ipv4\", \"services\": [{ \"port\": 22, \"protocol\": \"tcp\", \"name\": \"ssh\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 51 }, { \"port\": 80, \"protocol\": \"tcp\", \"name\": \"http\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 51 }, { \"port\": 443, \"protocol\": \"tcp\", \"name\": \"https\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 51 }, { \"port\": 3389, \"protocol\": \"tcp\", \"name\": \"ms-wbt-server\", \"state\": \"closed\", \"reason\": \"reset\", \"reason_ttl\": 51 }] }, { \"target\": \"172.31.50.254\", \"addr_type\": \"ipv4\", \"services\": [{ \"port\": 22, \"protocol\": \"tcp\", \"name\": \"ssh\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 64 }, { \"port\": 111, \"protocol\": \"tcp\", \"name\": \"rpcbind\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 64 }, { \"port\": 3306, \"protocol\": \"tcp\", \"name\": \"mysql\", \"state\": \"filtered\", \"reason\": \"no-response\", \"reason_ttl\": 0 }, { \"port\": 5901, \"protocol\": \"tcp\", \"name\": \"vnc-1\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 64 }, { \"port\": 6001, \"protocol\": \"tcp\", \"name\": \"X11:1\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 64 }, { \"port\": 9200, \"protocol\": \"tcp\", \"name\": \"wap-wsp\", \"state\": \"filtered\", \"reason\": \"no-response\", \"reason_ttl\": 0 }] }], \"err_msg\": \"\" }, null, 2))\n    // this.jsonEditor.setValue(JSON.stringify(this.value, null, 2))\n    // this.jsonEditor.on('change', cm => {\n    //   this.$emit('changed', cm.getValue())\n    //   this.$emit('input', cm.getValue())\n    // })\n  },\n  methods: {\n    getValue() {\n      return this.jsonEditor.getValue()\n    },\n    getData(id) {\n      let query = { \"pid\": Number(id) }\n      TaskReport(query).then((response) => {\n        console.log(response.data)\n        this.jsonEditor.setValue(JSON.stringify(response.data, null, 2))\n        // setTimeout(() => { this.listLoading = false; }, 1.5 * 1000);\n      });\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.json-editor {\n  height: 100%;\n  position: relative;\n\n  ::v-deep {\n    .CodeMirror {\n      height: auto;\n      min-height: 300px;\n    }\n\n    .CodeMirror-scroll {\n      min-height: 300px;\n    }\n\n    .cm-s-rubyblue span.cm-string {\n      color: #f08047;\n    }\n  }\n}\n</style>"]}]}