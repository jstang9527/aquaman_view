{"remainingRequest":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/aquaman_view/src/views/mars/report.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/views/aquaman_view/src/views/mars/report.vue","mtime":1601261308749},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/babel-loader/lib/index.js","mtime":1601261365222},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js","mtime":1601261366062}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDb2RlTWlycm9yIGZyb20gJ2NvZGVtaXJyb3InCmltcG9ydCAnY29kZW1pcnJvci9hZGRvbi9saW50L2xpbnQuY3NzJwppbXBvcnQgJ2NvZGVtaXJyb3IvbGliL2NvZGVtaXJyb3IuY3NzJwppbXBvcnQgJ2NvZGVtaXJyb3IvdGhlbWUvcnVieWJsdWUuY3NzJwpyZXF1aXJlKCdzY3JpcHQtbG9hZGVyIWpzb25saW50JykKaW1wb3J0ICdjb2RlbWlycm9yL21vZGUvamF2YXNjcmlwdC9qYXZhc2NyaXB0JwppbXBvcnQgJ2NvZGVtaXJyb3IvYWRkb24vbGludC9saW50JwppbXBvcnQgJ2NvZGVtaXJyb3IvYWRkb24vbGludC9qc29uLWxpbnQnCmltcG9ydCB7IFRhc2tSZXBvcnQgfSBmcm9tICJAL2FwaS9tYXJzIgppbXBvcnQgeyBzdHJpbmcgfSBmcm9tICdqc3ppcC9saWIvc3VwcG9ydCcKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSnNvbkVkaXRvcicsCiAgLyogZXNsaW50LWRpc2FibGUgdnVlL3JlcXVpcmUtcHJvcC10eXBlcyAqLwogIHByb3BzOiBbJ3ZhbHVlJ10sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGpzb25FZGl0b3I6IGZhbHNlLAogICAgICBpZDogdW5kZWZpbmVkLAogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHZhbHVlKHZhbHVlKSB7CiAgICAgIGNvbnN0IGVkaXRvclZhbHVlID0gdGhpcy5qc29uRWRpdG9yLmdldFZhbHVlKCkKICAgICAgaWYgKHZhbHVlICE9PSBlZGl0b3JWYWx1ZSkgewogICAgICAgIHRoaXMuanNvbkVkaXRvci5zZXRWYWx1ZShKU09OLnN0cmluZ2lmeSh0aGlzLnZhbHVlLCBudWxsLCAyKSkKICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuaWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5pZAogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuanNvbkVkaXRvciA9IENvZGVNaXJyb3IuZnJvbVRleHRBcmVhKHRoaXMuJHJlZnMudGV4dGFyZWEsIHsKICAgICAgbGluZU51bWJlcnM6IHRydWUsCiAgICAgIG1vZGU6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgZ3V0dGVyczogWydDb2RlTWlycm9yLWxpbnQtbWFya2VycyddLAogICAgICB0aGVtZTogJ3J1YnlibHVlJywKICAgICAgbGludDogdHJ1ZQogICAgfSkKICAgIHRoaXMuZ2V0VmFsdWUoKQogICAgdGhpcy5nZXREYXRhKHRoaXMuaWQpCiAgICAvLyB0aGlzLmpzb25FZGl0b3Iuc2V0VmFsdWUoSlNPTi5zdHJpbmdpZnkoeyAidGFza19pZCI6ICJmMWMwN2Y1ZTgzMjlhOTgxODQ5MDI1MjFjOWVkNjU2ZCIsICJwaWQiOiAxLCAiZHVyYXRpb24iOiAiMTI0LjYxMDAwMSIsICJ0YXJnZXRzIjogIjE3Mi4zMS41MC4xNTcsemFuNzEuY29tLDE3Mi4zMS41MC4yNTQiLCAiaG9zdHMiOiBbeyAidGFyZ2V0IjogIjE3Mi4zMS41MC4xNTciLCAiYWRkcl90eXBlIjogImlwdjQiLCAic2VydmljZXMiOiBbeyAicG9ydCI6IDMzODksICJwcm90b2NvbCI6ICJ0Y3AiLCAibmFtZSI6ICJtcy13YnQtc2VydmVyIiwgInN0YXRlIjogIm9wZW4iLCAicmVhc29uIjogInN5bi1hY2siLCAicmVhc29uX3R0bCI6IDEyOCB9XSB9LCB7ICJ0YXJnZXQiOiAiNDcuOTIuMjU1LjM5IiwgImFkZHJfdHlwZSI6ICJpcHY0IiwgInNlcnZpY2VzIjogW3sgInBvcnQiOiAyMiwgInByb3RvY29sIjogInRjcCIsICJuYW1lIjogInNzaCIsICJzdGF0ZSI6ICJvcGVuIiwgInJlYXNvbiI6ICJzeW4tYWNrIiwgInJlYXNvbl90dGwiOiA1MSB9LCB7ICJwb3J0IjogODAsICJwcm90b2NvbCI6ICJ0Y3AiLCAibmFtZSI6ICJodHRwIiwgInN0YXRlIjogIm9wZW4iLCAicmVhc29uIjogInN5bi1hY2siLCAicmVhc29uX3R0bCI6IDUxIH0sIHsgInBvcnQiOiA0NDMsICJwcm90b2NvbCI6ICJ0Y3AiLCAibmFtZSI6ICJodHRwcyIsICJzdGF0ZSI6ICJvcGVuIiwgInJlYXNvbiI6ICJzeW4tYWNrIiwgInJlYXNvbl90dGwiOiA1MSB9LCB7ICJwb3J0IjogMzM4OSwgInByb3RvY29sIjogInRjcCIsICJuYW1lIjogIm1zLXdidC1zZXJ2ZXIiLCAic3RhdGUiOiAiY2xvc2VkIiwgInJlYXNvbiI6ICJyZXNldCIsICJyZWFzb25fdHRsIjogNTEgfV0gfSwgeyAidGFyZ2V0IjogIjE3Mi4zMS41MC4yNTQiLCAiYWRkcl90eXBlIjogImlwdjQiLCAic2VydmljZXMiOiBbeyAicG9ydCI6IDIyLCAicHJvdG9jb2wiOiAidGNwIiwgIm5hbWUiOiAic3NoIiwgInN0YXRlIjogIm9wZW4iLCAicmVhc29uIjogInN5bi1hY2siLCAicmVhc29uX3R0bCI6IDY0IH0sIHsgInBvcnQiOiAxMTEsICJwcm90b2NvbCI6ICJ0Y3AiLCAibmFtZSI6ICJycGNiaW5kIiwgInN0YXRlIjogIm9wZW4iLCAicmVhc29uIjogInN5bi1hY2siLCAicmVhc29uX3R0bCI6IDY0IH0sIHsgInBvcnQiOiAzMzA2LCAicHJvdG9jb2wiOiAidGNwIiwgIm5hbWUiOiAibXlzcWwiLCAic3RhdGUiOiAiZmlsdGVyZWQiLCAicmVhc29uIjogIm5vLXJlc3BvbnNlIiwgInJlYXNvbl90dGwiOiAwIH0sIHsgInBvcnQiOiA1OTAxLCAicHJvdG9jb2wiOiAidGNwIiwgIm5hbWUiOiAidm5jLTEiLCAic3RhdGUiOiAib3BlbiIsICJyZWFzb24iOiAic3luLWFjayIsICJyZWFzb25fdHRsIjogNjQgfSwgeyAicG9ydCI6IDYwMDEsICJwcm90b2NvbCI6ICJ0Y3AiLCAibmFtZSI6ICJYMTE6MSIsICJzdGF0ZSI6ICJvcGVuIiwgInJlYXNvbiI6ICJzeW4tYWNrIiwgInJlYXNvbl90dGwiOiA2NCB9LCB7ICJwb3J0IjogOTIwMCwgInByb3RvY29sIjogInRjcCIsICJuYW1lIjogIndhcC13c3AiLCAic3RhdGUiOiAiZmlsdGVyZWQiLCAicmVhc29uIjogIm5vLXJlc3BvbnNlIiwgInJlYXNvbl90dGwiOiAwIH1dIH1dLCAiZXJyX21zZyI6ICIiIH0sIG51bGwsIDIpKQogICAgLy8gdGhpcy5qc29uRWRpdG9yLnNldFZhbHVlKEpTT04uc3RyaW5naWZ5KHRoaXMudmFsdWUsIG51bGwsIDIpKQogICAgLy8gdGhpcy5qc29uRWRpdG9yLm9uKCdjaGFuZ2UnLCBjbSA9PiB7CiAgICAvLyAgIHRoaXMuJGVtaXQoJ2NoYW5nZWQnLCBjbS5nZXRWYWx1ZSgpKQogICAgLy8gICB0aGlzLiRlbWl0KCdpbnB1dCcsIGNtLmdldFZhbHVlKCkpCiAgICAvLyB9KQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0VmFsdWUoKSB7CiAgICAgIHJldHVybiB0aGlzLmpzb25FZGl0b3IuZ2V0VmFsdWUoKQogICAgfSwKICAgIGdldERhdGEoaWQpIHsKICAgICAgbGV0IHF1ZXJ5ID0geyAicGlkIjogTnVtYmVyKGlkKSB9CiAgICAgIFRhc2tSZXBvcnQocXVlcnkpLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSkKICAgICAgICB0aGlzLmpzb25FZGl0b3Iuc2V0VmFsdWUoSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UuZGF0YSwgbnVsbCwgMikpCiAgICAgICAgLy8gc2V0VGltZW91dCgoKSA9PiB7IHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZTsgfSwgMS41ICogMTAwMCk7CiAgICAgIH0pOwogICAgfQogIH0KfQo="},{"version":3,"sources":["report.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"report.vue","sourceRoot":"src/views/mars","sourcesContent":["<template>\n  <div class=\"json-editor\">\n    <textarea ref=\"textarea\" />\n  </div>\n</template>\n\n<script>\nimport CodeMirror from 'codemirror'\nimport 'codemirror/addon/lint/lint.css'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/rubyblue.css'\nrequire('script-loader!jsonlint')\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/addon/lint/lint'\nimport 'codemirror/addon/lint/json-lint'\nimport { TaskReport } from \"@/api/mars\"\nimport { string } from 'jszip/lib/support'\n\nexport default {\n  name: 'JsonEditor',\n  /* eslint-disable vue/require-prop-types */\n  props: ['value'],\n  data() {\n    return {\n      jsonEditor: false,\n      id: undefined,\n    }\n  },\n  watch: {\n    value(value) {\n      const editorValue = this.jsonEditor.getValue()\n      if (value !== editorValue) {\n        this.jsonEditor.setValue(JSON.stringify(this.value, null, 2))\n      }\n    }\n  },\n  created() {\n    this.id = this.$route.query.id\n  },\n  mounted() {\n    this.jsonEditor = CodeMirror.fromTextArea(this.$refs.textarea, {\n      lineNumbers: true,\n      mode: 'application/json',\n      gutters: ['CodeMirror-lint-markers'],\n      theme: 'rubyblue',\n      lint: true\n    })\n    this.getValue()\n    this.getData(this.id)\n    // this.jsonEditor.setValue(JSON.stringify({ \"task_id\": \"f1c07f5e8329a98184902521c9ed656d\", \"pid\": 1, \"duration\": \"124.610001\", \"targets\": \"172.31.50.157,zan71.com,172.31.50.254\", \"hosts\": [{ \"target\": \"172.31.50.157\", \"addr_type\": \"ipv4\", \"services\": [{ \"port\": 3389, \"protocol\": \"tcp\", \"name\": \"ms-wbt-server\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 128 }] }, { \"target\": \"47.92.255.39\", \"addr_type\": \"ipv4\", \"services\": [{ \"port\": 22, \"protocol\": \"tcp\", \"name\": \"ssh\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 51 }, { \"port\": 80, \"protocol\": \"tcp\", \"name\": \"http\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 51 }, { \"port\": 443, \"protocol\": \"tcp\", \"name\": \"https\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 51 }, { \"port\": 3389, \"protocol\": \"tcp\", \"name\": \"ms-wbt-server\", \"state\": \"closed\", \"reason\": \"reset\", \"reason_ttl\": 51 }] }, { \"target\": \"172.31.50.254\", \"addr_type\": \"ipv4\", \"services\": [{ \"port\": 22, \"protocol\": \"tcp\", \"name\": \"ssh\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 64 }, { \"port\": 111, \"protocol\": \"tcp\", \"name\": \"rpcbind\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 64 }, { \"port\": 3306, \"protocol\": \"tcp\", \"name\": \"mysql\", \"state\": \"filtered\", \"reason\": \"no-response\", \"reason_ttl\": 0 }, { \"port\": 5901, \"protocol\": \"tcp\", \"name\": \"vnc-1\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 64 }, { \"port\": 6001, \"protocol\": \"tcp\", \"name\": \"X11:1\", \"state\": \"open\", \"reason\": \"syn-ack\", \"reason_ttl\": 64 }, { \"port\": 9200, \"protocol\": \"tcp\", \"name\": \"wap-wsp\", \"state\": \"filtered\", \"reason\": \"no-response\", \"reason_ttl\": 0 }] }], \"err_msg\": \"\" }, null, 2))\n    // this.jsonEditor.setValue(JSON.stringify(this.value, null, 2))\n    // this.jsonEditor.on('change', cm => {\n    //   this.$emit('changed', cm.getValue())\n    //   this.$emit('input', cm.getValue())\n    // })\n  },\n  methods: {\n    getValue() {\n      return this.jsonEditor.getValue()\n    },\n    getData(id) {\n      let query = { \"pid\": Number(id) }\n      TaskReport(query).then((response) => {\n        console.log(response.data)\n        this.jsonEditor.setValue(JSON.stringify(response.data, null, 2))\n        // setTimeout(() => { this.listLoading = false; }, 1.5 * 1000);\n      });\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.json-editor {\n  height: 100%;\n  position: relative;\n\n  ::v-deep {\n    .CodeMirror {\n      height: auto;\n      min-height: 300px;\n    }\n\n    .CodeMirror-scroll {\n      min-height: 300px;\n    }\n\n    .cm-s-rubyblue span.cm-string {\n      color: #f08047;\n    }\n  }\n}\n</style>"]}]}