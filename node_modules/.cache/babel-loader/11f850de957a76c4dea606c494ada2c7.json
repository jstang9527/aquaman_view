{"remainingRequest":"/home/views/aquaman_view/node_modules/babel-loader/lib/index.js!/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/views/aquaman_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/aquaman_view/src/views/dashboard/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/views/aquaman_view/src/views/dashboard/index.vue","mtime":1605441476690},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/babel-loader/lib/index.js","mtime":1601261365222},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js","mtime":1601261366062}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFBhbmVsR3JvdXAgZnJvbSAnLi9jb21wb25lbnRzL1BhbmVsR3JvdXAnOwppbXBvcnQgTGluZUNoYXJ0IGZyb20gJy4vY29tcG9uZW50cy9MaW5lQ2hhcnQnOwppbXBvcnQgUGllQ2hhcnQgZnJvbSAnLi9jb21wb25lbnRzL1BpZUNoYXJ0JzsKaW1wb3J0IHsgRGFzaGJvYXJkRGF0YSB9IGZyb20gJ0AvYXBpL2Rhc2hib2FyZCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRGFzaGJvYXJkQWRtaW4nLAogIGNvbXBvbmVudHM6IHsKICAgIFBhbmVsR3JvdXA6IFBhbmVsR3JvdXAsCiAgICBMaW5lQ2hhcnQ6IExpbmVDaGFydCwKICAgIFBpZUNoYXJ0OiBQaWVDaGFydAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhbmVsR3JvdXBEYXRhOiB7CiAgICAgICAgJ3NlcnZpY2VOdW0nOiAyMywKICAgICAgICAvLyDmvI/mtJ7lqIHog4EKICAgICAgICAndG9kYXlSZXF1ZXN0TnVtJzogMTIwMCwKICAgICAgICAvL+aPkuS7tuaVsOmHjwogICAgICAgICdjdXJyZW50UXBzJzogMjAwLAogICAgICAgIC8v5byx5Y+j5LukCiAgICAgICAgJ2FwcE51bSc6IDUgLy/otYTkuqfnu5/orqEKCiAgICAgIH0sCiAgICAgIGxpbmVDaGFydERhdGE6IHsKICAgICAgICAndGl0bGUnOiAn5LuK5pel5rWB6YeP57uf6K6hJywKICAgICAgICAndG9kYXknOiBbXSwKICAgICAgICAneWVzdGVyZGF5JzogW10KICAgICAgfSwKICAgICAgcGllQ2hhcnREYXRhOiB7CiAgICAgICAgJ3RpdGxlJzogJ+W8seWPo+S7pCcsCiAgICAgICAgJ2xlZ2VuZCc6IFsnc3NoJywgJ3JkcCcsICdlcyddLAogICAgICAgICdzZXJpZXMnOiBbewogICAgICAgICAgdmFsdWU6IDMyMCwKICAgICAgICAgIG5hbWU6ICdzc2gnCiAgICAgICAgfSwgewogICAgICAgICAgdmFsdWU6IDI0MCwKICAgICAgICAgIG5hbWU6ICdyZHAnCiAgICAgICAgfSwgewogICAgICAgICAgdmFsdWU6IDE0OSwKICAgICAgICAgIG5hbWU6ICdlcycKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZmV0Y2hEYXRhKCk7IC8vIHRoaXMuZmV0Y2hQYW5lbEdyb3VwRGF0YSgpCiAgICAvLyB0aGlzLmZldGNoRmxvd1N0YXQoKQogICAgLy8gdGhpcy5mZXRjaFNlcnZpY2VTdGF0KCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoRGF0YTogZnVuY3Rpb24gZmV0Y2hEYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgRGFzaGJvYXJkRGF0YSgpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgdmFyIGRhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICAgIF90aGlzLnBhbmVsR3JvdXBEYXRhID0gewogICAgICAgICAgJ3NlcnZpY2VOdW0nOiBkYXRhLnZ1bF9jb3VudCwKICAgICAgICAgICd0b2RheVJlcXVlc3ROdW0nOiBkYXRhLnBsdWdpbl9jb3VudCwKICAgICAgICAgICdjdXJyZW50UXBzJzogZGF0YS5hc3NldF9jb3VudCwKICAgICAgICAgICdhcHBOdW0nOiBkYXRhLnRhc2tfY291bnQKICAgICAgICB9OwogICAgICAgIF90aGlzLmxpbmVDaGFydERhdGEgPSB7CiAgICAgICAgICAndGl0bGUnOiAn5Lu75Yqh57uf6K6hJywKICAgICAgICAgICd0b2RheSc6IGRhdGEudGFza3Nfbm93LAogICAgICAgICAgJ3llc3RlcmRheSc6IGRhdGEudGFza3Nfb2xkCiAgICAgICAgfTsKICAgICAgICBfdGhpcy5waWVDaGFydERhdGEgPSB7CiAgICAgICAgICAndGl0bGUnOiAn5ryP5rSe57G75Z6LJywKICAgICAgICAgICdsZWdlbmQnOiBkYXRhLmxlZ2VuZCwKICAgICAgICAgICdzZXJpZXMnOiBkYXRhLnNlcmllcwogICAgICAgIH07CiAgICAgIH0pOwogICAgfSwKICAgIGZldGNoUGFuZWxHcm91cERhdGE6IGZ1bmN0aW9uIGZldGNoUGFuZWxHcm91cERhdGEoKSB7Ly8gcGFuZWxHcm91cERhdGEoeyB9KS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgLy8gICB0aGlzLnBhbmVsR3JvdXBEYXRhID0gcmVzcG9uc2UuZGF0YQogICAgICAvLyB9KS5jYXRjaCgoKSA9PiB7CiAgICAgIC8vIH0pCiAgICB9LAogICAgZmV0Y2hGbG93U3RhdDogZnVuY3Rpb24gZmV0Y2hGbG93U3RhdCgpIHsvLyBmbG93U3RhdCh7IH0pLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAvLyAgIHRoaXMubGluZUNoYXJ0RGF0YS50b2RheSA9IHJlc3BvbnNlLmRhdGEudG9kYXkKICAgICAgLy8gICB0aGlzLmxpbmVDaGFydERhdGEueWVzdGVyZGF5ID0gcmVzcG9uc2UuZGF0YS55ZXN0ZXJkYXkKICAgICAgLy8gfSkuY2F0Y2goKCkgPT4gewogICAgICAvLyB9KQogICAgfSwKICAgIGZldGNoU2VydmljZVN0YXQ6IGZ1bmN0aW9uIGZldGNoU2VydmljZVN0YXQoKSB7Ly8gc2VydmljZVN0YXQoeyB9KS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgLy8gICB0aGlzLnBpZUNoYXJ0RGF0YS5sZWdlbmQgPSByZXNwb25zZS5kYXRhLmxlZ2VuZAogICAgICAvLyAgIHRoaXMucGllQ2hhcnREYXRhLnNlcmllcyA9IHJlc3BvbnNlLmRhdGEuZGF0YQogICAgICAvLyB9KS5jYXRjaCgoKSA9PiB7CiAgICAgIC8vIH0pCiAgICB9LAogICAgaGFuZGxlU2V0TGluZUNoYXJ0RGF0YTogZnVuY3Rpb24gaGFuZGxlU2V0TGluZUNoYXJ0RGF0YSgpIHsvLyB0aGlzLmxpbmVDaGFydERhdGEgPSBsaW5lQ2hhcnREYXRhW3R5cGVdCiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAmBA,OAAA,UAAA,MAAA,yBAAA;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,OAAA,QAAA,MAAA,uBAAA;AACA,SAAA,aAAA,QAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,SAAA,EAAA,SAFA;AAGA,IAAA,QAAA,EAAA;AAHA,GAFA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,cAAA,EAAA;AACA,sBAAA,EADA;AACA;AACA,2BAAA,IAFA;AAEA;AACA,sBAAA,GAHA;AAGA;AACA,kBAAA,CAJA,CAIA;;AAJA,OADA;AAOA,MAAA,aAAA,EAAA;AACA,iBAAA,QADA;AAEA,iBAAA,EAFA;AAGA,qBAAA;AAHA,OAPA;AAYA,MAAA,YAAA,EAAA;AACA,iBAAA,KADA;AAEA,kBAAA,CAAA,KAAA,EAAA,KAAA,EAAA,IAAA,CAFA;AAGA,kBAAA,CACA;AAAA,UAAA,KAAA,EAAA,GAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,KAAA,EAAA,GAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAFA,EAGA;AAAA,UAAA,KAAA,EAAA,GAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAHA;AAHA;AAZA,KAAA;AAsBA,GA9BA;AA+BA,EAAA,OA/BA,qBA+BA;AACA,SAAA,SAAA,GADA,CAEA;AACA;AACA;AACA,GApCA;AAqCA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AACA,MAAA,aAAA,GAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,YAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,cAAA,GAAA;AACA,wBAAA,IAAA,CAAA,SADA;AAEA,6BAAA,IAAA,CAAA,YAFA;AAGA,wBAAA,IAAA,CAAA,WAHA;AAIA,oBAAA,IAAA,CAAA;AAJA,SAAA;AAMA,QAAA,KAAA,CAAA,aAAA,GAAA;AACA,mBAAA,MADA;AAEA,mBAAA,IAAA,CAAA,SAFA;AAGA,uBAAA,IAAA,CAAA;AAHA,SAAA;AAKA,QAAA,KAAA,CAAA,YAAA,GAAA;AACA,mBAAA,MADA;AAEA,oBAAA,IAAA,CAAA,MAFA;AAGA,oBAAA,IAAA,CAAA;AAHA,SAAA;AAKA,OAlBA;AAmBA,KArBA;AAsBA,IAAA,mBAtBA,iCAsBA,CACA;AACA;AACA;AACA;AACA,KA3BA;AA4BA,IAAA,aA5BA,2BA4BA,CACA;AACA;AACA;AACA;AACA;AACA,KAlCA;AAmCA,IAAA,gBAnCA,8BAmCA,CACA;AACA;AACA;AACA;AACA;AACA,KAzCA;AA0CA,IAAA,sBA1CA,oCA0CA,CACA;AACA;AA5CA;AArCA,CAAA","sourcesContent":["<template>\n  <div class=\"dashboard-editor-container\">\n    <panel-group :data=\"panelGroupData\" />\n    <el-row :gutter=\"32\">\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"16\">\n        <div class=\"chart-wrapper\">\n          <line-chart :chart-data=\"lineChartData\" />\n        </div>\n      </el-col>\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"8\">\n        <div class=\"chart-wrapper\">\n          <pie-chart :chart-data=\"pieChartData\" />\n        </div>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport PanelGroup from './components/PanelGroup'\nimport LineChart from './components/LineChart'\nimport PieChart from './components/PieChart'\nimport { DashboardData } from '@/api/dashboard'\n\nexport default {\n  name: 'DashboardAdmin',\n  components: {\n    PanelGroup,\n    LineChart,\n    PieChart\n  },\n  data() {\n    return {\n      panelGroupData: {\n        'serviceNum': 23, // 漏洞威胁\n        'todayRequestNum': 1200, //插件数量\n        'currentQps': 200, //弱口令\n        'appNum': 5 //资产统计\n      },\n      lineChartData: {\n        'title': '今日流量统计',\n        'today': [],\n        'yesterday': []\n      },\n      pieChartData: {\n        'title': '弱口令',\n        'legend': ['ssh','rdp','es'],\n        'series': [\n            { value: 320, name: 'ssh' },\n            { value: 240, name: 'rdp' },\n            { value: 149, name: 'es' },\n        ]\n      }\n    }\n  },\n  created() {\n    this.fetchData()\n    // this.fetchPanelGroupData()\n    // this.fetchFlowStat()\n    // this.fetchServiceStat()\n  },\n  methods: {\n    fetchData(){\n      DashboardData().then((response)=>{\n        let data = response.data\n        this.panelGroupData = {\n          'serviceNum': data.vul_count,\n          'todayRequestNum': data.plugin_count,\n          'currentQps': data.asset_count,\n          'appNum': data.task_count\n        }\n        this.lineChartData = {\n          'title': '任务统计',\n          'today': data.tasks_now,\n          'yesterday': data.tasks_old\n        }\n        this.pieChartData = {\n          'title': '漏洞类型',\n          'legend': data.legend,\n          'series': data.series\n        }\n      })\n    },\n    fetchPanelGroupData() {\n      // panelGroupData({ }).then(response => {\n      //   this.panelGroupData = response.data\n      // }).catch(() => {\n      // })\n    },\n    fetchFlowStat() {\n      // flowStat({ }).then(response => {\n      //   this.lineChartData.today = response.data.today\n      //   this.lineChartData.yesterday = response.data.yesterday\n      // }).catch(() => {\n      // })\n    },\n    fetchServiceStat() {\n      // serviceStat({ }).then(response => {\n      //   this.pieChartData.legend = response.data.legend\n      //   this.pieChartData.series = response.data.data\n      // }).catch(() => {\n      // })\n    },\n    handleSetLineChartData() {\n      // this.lineChartData = lineChartData[type]\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard-editor-container {\n  padding: 32px;\n  background-color: rgb(240, 242, 245);\n  position: relative;\n\n  .github-corner {\n    position: absolute;\n    top: 0px;\n    border: 0;\n    right: 0;\n  }\n\n  .chart-wrapper {\n    background: #fff;\n    padding: 16px 16px 0;\n    margin-bottom: 32px;\n  }\n}\n\n@media (max-width:1024px) {\n  .chart-wrapper {\n    padding: 8px;\n  }\n}\n</style>\n\n"],"sourceRoot":"src/views/dashboard"}]}