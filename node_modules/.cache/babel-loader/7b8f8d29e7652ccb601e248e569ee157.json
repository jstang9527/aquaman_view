{"remainingRequest":"/home/views/opentest_view/node_modules/babel-loader/lib/index.js!/home/views/opentest_view/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/views/opentest_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/opentest_view/src/views/excel/select-excel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/views/opentest_view/src/views/excel/select-excel.vue","mtime":1596199104000},{"path":"/home/views/opentest_view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/views/opentest_view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/views/opentest_view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/views/opentest_view/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCBmcm9tICIvaG9tZS92aWV3cy9vcGVudGVzdF92aWV3L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZmV0Y2hMaXN0IH0gZnJvbSAnQC9hcGkvYXJ0aWNsZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2VsZWN0RXhjZWwnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsaXN0OiBudWxsLAogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwKICAgICAgbXVsdGlwbGVTZWxlY3Rpb246IFtdLAogICAgICBkb3dubG9hZExvYWRpbmc6IGZhbHNlLAogICAgICBmaWxlbmFtZTogJycKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5mZXRjaERhdGEoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoRGF0YTogZnVuY3Rpb24gZmV0Y2hEYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWU7CiAgICAgIGZldGNoTGlzdCh0aGlzLmxpc3RRdWVyeSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YS5pdGVtczsKICAgICAgICBfdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVTZWxlY3Rpb25DaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZVNlbGVjdGlvbkNoYW5nZSh2YWwpIHsKICAgICAgdGhpcy5tdWx0aXBsZVNlbGVjdGlvbiA9IHZhbDsKICAgIH0sCiAgICBoYW5kbGVEb3dubG9hZDogZnVuY3Rpb24gaGFuZGxlRG93bmxvYWQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMubXVsdGlwbGVTZWxlY3Rpb24ubGVuZ3RoKSB7CiAgICAgICAgdGhpcy5kb3dubG9hZExvYWRpbmcgPSB0cnVlOwogICAgICAgIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoJ0AvdmVuZG9yL0V4cG9ydDJFeGNlbCcpKTsKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChleGNlbCkgewogICAgICAgICAgdmFyIHRIZWFkZXIgPSBbJ0lkJywgJ1RpdGxlJywgJ0F1dGhvcicsICdSZWFkaW5ncycsICdEYXRlJ107CiAgICAgICAgICB2YXIgZmlsdGVyVmFsID0gWydpZCcsICd0aXRsZScsICdhdXRob3InLCAncGFnZXZpZXdzJywgJ2Rpc3BsYXlfdGltZSddOwogICAgICAgICAgdmFyIGxpc3QgPSBfdGhpczIubXVsdGlwbGVTZWxlY3Rpb247CgogICAgICAgICAgdmFyIGRhdGEgPSBfdGhpczIuZm9ybWF0SnNvbihmaWx0ZXJWYWwsIGxpc3QpOwoKICAgICAgICAgIGV4Y2VsLmV4cG9ydF9qc29uX3RvX2V4Y2VsKHsKICAgICAgICAgICAgaGVhZGVyOiB0SGVhZGVyLAogICAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgICBmaWxlbmFtZTogX3RoaXMyLmZpbGVuYW1lCiAgICAgICAgICB9KTsKCiAgICAgICAgICBfdGhpczIuJHJlZnMubXVsdGlwbGVUYWJsZS5jbGVhclNlbGVjdGlvbigpOwoKICAgICAgICAgIF90aGlzMi5kb3dubG9hZExvYWRpbmcgPSBmYWxzZTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgIG1lc3NhZ2U6ICdQbGVhc2Ugc2VsZWN0IGF0IGxlYXN0IG9uZSBpdGVtJywKICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgZm9ybWF0SnNvbjogZnVuY3Rpb24gZm9ybWF0SnNvbihmaWx0ZXJWYWwsIGpzb25EYXRhKSB7CiAgICAgIHJldHVybiBqc29uRGF0YS5tYXAoZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gZmlsdGVyVmFsLm1hcChmdW5jdGlvbiAoaikgewogICAgICAgICAgcmV0dXJuIHZbal07CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["select-excel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,SAAA,SAAA,QAAA,eAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,WAAA,EAAA,IAFA;AAGA,MAAA,iBAAA,EAAA,EAHA;AAIA,MAAA,eAAA,EAAA,KAJA;AAKA,MAAA,QAAA,EAAA;AALA,KAAA;AAOA,GAVA;AAWA,EAAA,OAXA,qBAWA;AACA,SAAA,SAAA;AACA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AACA,WAAA,WAAA,GAAA,IAAA;AACA,MAAA,SAAA,CAAA,KAAA,SAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,KAAA;AACA,OAHA;AAIA,KAPA;AAQA,IAAA,qBARA,iCAQA,GARA,EAQA;AACA,WAAA,iBAAA,GAAA,GAAA;AACA,KAVA;AAWA,IAAA,cAXA,4BAWA;AAAA;;AACA,UAAA,KAAA,iBAAA,CAAA,MAAA,EAAA;AACA,aAAA,eAAA,GAAA,IAAA;AACA;AAAA,iDAAA,uBAAA;AAAA,WAAA,IAAA,CAAA,UAAA,KAAA,EAAA;AACA,cAAA,OAAA,GAAA,CAAA,IAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,CAAA;AACA,cAAA,SAAA,GAAA,CAAA,IAAA,EAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,cAAA,CAAA;AACA,cAAA,IAAA,GAAA,MAAA,CAAA,iBAAA;;AACA,cAAA,IAAA,GAAA,MAAA,CAAA,UAAA,CAAA,SAAA,EAAA,IAAA,CAAA;;AACA,UAAA,KAAA,CAAA,oBAAA,CAAA;AACA,YAAA,MAAA,EAAA,OADA;AAEA,YAAA,IAAA,EAAA,IAFA;AAGA,YAAA,QAAA,EAAA,MAAA,CAAA;AAHA,WAAA;;AAKA,UAAA,MAAA,CAAA,KAAA,CAAA,aAAA,CAAA,cAAA;;AACA,UAAA,MAAA,CAAA,eAAA,GAAA,KAAA;AACA,SAZA;AAaA,OAfA,MAeA;AACA,aAAA,QAAA,CAAA;AACA,UAAA,OAAA,EAAA,iCADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAAA;AAIA;AACA,KAjCA;AAkCA,IAAA,UAlCA,sBAkCA,SAlCA,EAkCA,QAlCA,EAkCA;AACA,aAAA,QAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA,SAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,CAAA,CAAA;AAAA,SAAA,CAAA;AAAA,OAAA,CAAA;AACA;AApCA;AAdA,CAAA","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-input v-model=\"filename\" placeholder=\"Please enter the file name (default excel-list)\" style=\"width:350px;\" prefix-icon=\"el-icon-document\" />\n    <el-button :loading=\"downloadLoading\" style=\"margin-bottom:20px\" type=\"primary\" icon=\"el-icon-document\" @click=\"handleDownload\">\n      Export Selected Items\n    </el-button>\n    <a href=\"https://panjiachen.github.io/vue-element-admin-site/feature/component/excel.html\" target=\"_blank\" style=\"margin-left:15px;\">\n      <el-tag type=\"info\">Documentation</el-tag>\n    </a>\n    <el-table\n      ref=\"multipleTable\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      element-loading-text=\"拼命加载中\"\n      border\n      fit\n      highlight-current-row\n      @selection-change=\"handleSelectionChange\"\n    >\n      <el-table-column type=\"selection\" align=\"center\" />\n      <el-table-column align=\"center\" label=\"Id\" width=\"95\">\n        <template slot-scope=\"scope\">\n          {{ scope.$index }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Title\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.title }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Author\" width=\"110\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-tag>{{ scope.row.author }}</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Readings\" width=\"115\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.pageviews }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"PDate\" width=\"220\">\n        <template slot-scope=\"scope\">\n          <i class=\"el-icon-time\" />\n          <span>{{ scope.row.display_time }}</span>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport { fetchList } from '@/api/article'\n\nexport default {\n  name: 'SelectExcel',\n  data() {\n    return {\n      list: null,\n      listLoading: true,\n      multipleSelection: [],\n      downloadLoading: false,\n      filename: ''\n    }\n  },\n  created() {\n    this.fetchData()\n  },\n  methods: {\n    fetchData() {\n      this.listLoading = true\n      fetchList(this.listQuery).then(response => {\n        this.list = response.data.items\n        this.listLoading = false\n      })\n    },\n    handleSelectionChange(val) {\n      this.multipleSelection = val\n    },\n    handleDownload() {\n      if (this.multipleSelection.length) {\n        this.downloadLoading = true\n        import('@/vendor/Export2Excel').then(excel => {\n          const tHeader = ['Id', 'Title', 'Author', 'Readings', 'Date']\n          const filterVal = ['id', 'title', 'author', 'pageviews', 'display_time']\n          const list = this.multipleSelection\n          const data = this.formatJson(filterVal, list)\n          excel.export_json_to_excel({\n            header: tHeader,\n            data,\n            filename: this.filename\n          })\n          this.$refs.multipleTable.clearSelection()\n          this.downloadLoading = false\n        })\n      } else {\n        this.$message({\n          message: 'Please select at least one item',\n          type: 'warning'\n        })\n      }\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => v[j]))\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/excel"}]}