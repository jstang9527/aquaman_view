{"remainingRequest":"/home/views/aquaman_view/node_modules/babel-loader/lib/index.js!/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/views/aquaman_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/aquaman_view/src/views/poc-vul/task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/views/aquaman_view/src/views/poc-vul/task.vue","mtime":1606458937732},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/babel-loader/lib/index.js","mtime":1601261365222},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js","mtime":1601261366062}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["task.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"mixin-components-container\">\n    <el-row>\n      <el-card class=\"box-card\">\n        <div slot=\"header\" class=\"clearfix\">\n          <span>{{title}}</span>\n        </div>\n        <div style=\"margin-bottom:50px;\">\n          <el-form ref=\"form\" :model=\"form\" label-width=\"140px\">\n            <el-form-item label=\"任务名\" class=\"is-required\">\n              <el-input v-if=\"isEditPage\" v-model=\"form.task_name\" disabled></el-input>\n              <el-input v-else v-model=\"form.task_name\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"扫描周期\" class=\"is-required\">\n              <el-select v-model=\"form.recursion\" placeholder=\"请选择\">\n                <el-option label=\"一次\" :value=0></el-option>\n                <el-option label=\"每日\" :value=1></el-option>\n                <el-option label=\"每周\" :value=7></el-option>\n                <el-option label=\"每月\" :value=30></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"检测目标\">\n              <el-input v-model=\"form.target_list\" type=\"textarea\" :rows=\"4\" placeholder=\"http://example.com, 多条换行\" />\n            </el-form-item>\n            <el-form-item>\n              <el-card class=\"box-card-in\">\n                <div slot=\"header\" class=\"clearfix\">\n                  <span class=\"dump-box\">插件列表</span>\n                  <el-button style=\"float: right; margin-top: 3px;\" type=\"text\" @click=\"openDialog()\">添加插件</el-button>\n                </div>\n                <el-timeline>\n                  <el-timeline-item v-for=\"(item, index) in form.pluginid_list\" :key=\"index\" :color=\"'#0bbd87'\" :timestamp=\"plugin_list[item].plugin_date\">\n                    {{plugin_list[item].plugin_name}}\n                    <el-button type=\"danger\" size=\"mini\" style=\"float: right; margin-top: 3px;\" @click=\"delListItem(index)\">删除</el-button>\n                  </el-timeline-item>\n                </el-timeline>\n              </el-card>\n            </el-form-item>\n            <el-form-item>\n              <el-button v-if=\"isEditPage\" type=\"danger\" :disabled=\"submitBtnDisabled\" @click=\"onUpdate()\">提交修改</el-button>\n              <el-button v-else type=\"primary\" :disabled=\"submitBtnDisabled\" @click=\"onSubmit(0)\">立即创建</el-button>\n              <!-- <el-button>取消</el-button> -->\n            </el-form-item>\n          </el-form>\n        </div>\n      </el-card>\n    </el-row>\n    <!--弹出组件-->\n    <el-dialog title=\"POC插件\" :visible.sync=\"dialog\">\n      <el-form ref=\"dataForm\" :model=\"temp_plugin\" label-position=\"left\" label-width=\"120px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"选择插件\" class=\"is-required\">\n          <el-select v-model=\"temp_plugin.index\" filterable  placeholder=\"请选择\" style=\"width: 120%\">\n            <el-option v-for=\"(item, index) in plugin_list\" :key=\"index\" :label=\"item.plugin_name\" :value=\"index\"></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cancelConfirm()\">Cancel</el-button>\n        <el-button type=\"primary\" @click=\"onConfirm()\">Confirm</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { TaskDetail, PluginList, CreateTask, PutTask } from \"@/api/poc_vul\";\nexport default {\n    data() {\n        return {\n            isEditItem: false,\n            isEditPage: false, //是创建还是修改页面？\n            submitBtnDisabled: false,\n            dialog: false,\n            title: \"创建任务\",\n            list: [],\n            task_id: undefined,\n            form: {task_name: \"\", recursion: 0, pluginid_list:[], target_list:\"\"}, //第三个是plugin_list下标,第四个需要切分\n            plugin_list: [], //插件列表\n            temp_plugin: {index: undefined}, //选择的插件\n        };\n    },\n    created() {\n        this.getPlugins()\n        let id = this.$route.query.id\n        if (id) { //点击修改页面的跳转id uri参数(?id=64)\n            // 如果有id,查DB进行赋值\n            this.title = \"更新任务\"\n            this.isEditPage = true\n            this.isLoading = true\n            this.task_id = id\n            this.getDetail(id)\n        }else{ //创建POC任务\n            \n        }\n    },\n    methods: {\n        openDialog() {\n            this.dialog = true\n            this.isEditItem = false\n        },\n        // 关闭子页\n        closeChildPage() {\n          this.$router.go(-1)\n          this.$store.state.tagsView.visitedViews.splice(this.$store.state.tagsView.visitedViews.findIndex(item => item.path === this.$route.path), 1)\n          this.$router.push(this.$store.state.tagsView.visitedViews[this.$store.state.tagsView.visitedViews.length - 1].path)\n        },\n        // 更新组件配置\n        onUpdate() {\n            if (this.form.task_name.trim() == \"\") { this.$message({ message: \"任务名必填\", type: \"warning\" }); return }\n            if (this.form.target_list.trim() == \"\") { this.$message({ message: \"目标列表为空\", type: \"warning\" }); return }     \n            if (this.form.pluginid_list.length == 0) { this.$message({ message: \"插件列表为空\", type: \"warning\" }); return }\n            this.submitBtnDisabled = true\n            //1.组装数据\n            let targets = this.form.target_list.split('\\n').map(el => el.trim()).filter(item => item.trim() != '')\n            let plugins = []\n            for (let i=0; i<this.form.pluginid_list.length; i++){\n                plugins.push(this.plugin_list[this.form.pluginid_list[i]]._id)\n            }\n            let postData = { id: this.task_id, task_name: this.form.task_name, recursion: this.form.recursion, target_list: targets, plugins: plugins }\n            //2.调API接口\n            PutTask(postData).then((response) => {\n              this.submitBtnDisabled = false;\n              this.$notify({title: \"Success\", message: \"Update Successfully\" + response.data.errmsg, type: \"success\", duration: 5000});\n              this.closeChildPage()\n            }).catch(() => {\n              this.submitBtnDisabled = false;\n              this.$notify({title: \"Failed\", message: \"Failed Update\", type: \"error\", duration: 5000});\n            });\n        },\n        //提及创建组件\n        onSubmit() {\n            console.log(this.form)\n            if (this.form.task_name == \"\") { this.$message({ message: \"任务名必填\", type: \"warning\" }); return }\n            if (this.form.target_list == \"\") { this.$message({ message: \"目标列表为空\", type: \"warning\" }); return }     \n            if (this.form.pluginid_list.length == 0) { this.$message({ message: \"插件列表为空\", type: \"warning\" }); return }\n            this.submitBtnDisabled = true\n            //1.组装数据\n            let targets = this.form.target_list.split('\\n').map(el => el.trim()).filter(item => item.trim() != '')\n            let plugins = []\n            for (let i=0; i<this.form.pluginid_list.length; i++){\n                plugins.push(this.plugin_list[this.form.pluginid_list[i]]._id)\n            }\n            let postData = { task_name: this.form.task_name, recursion: this.form.recursion, target_list: targets, pluginid_list: plugins }\n            console.log(postData)\n            //2.调API接口\n            CreateTask(postData).then((response) => {\n                this.submitBtnDisabled = false;\n                this.$notify({ title: \"Success\", message: \"添加成功\" + response.data.errmsg, type: \"success\", duration: 5000, });\n                this.form = {}\n                this.closeChildPage()\n            }).catch((response) => {\n                this.submitBtnDisabled = false;\n                this.$notify({ title: \"Failed\", message: \"添加失败:\" + response.errmsg, type: \"danger\", duration: 5000, });\n            });\n        },\n        cancelConfirm() {\n            this.temp_plugin = {index: undefined}\n            this.dialog = false\n        },\n        //插件弹出框提交\n        onConfirm() {\n            let index = this.temp_plugin.index\n            if (index < 0) { this.$message(\"插件必选\"); return }\n            // 判断是否已经存在了\n            if (this.form.pluginid_list.indexOf(index)> -1){ this.$message({ message: \"该插件已经被选择\", type: \"warning\" }); return }\n            this.form.pluginid_list.push(index)\n            this.temp_plugin = {index: undefined}\n            this.dialog = false\n        },\n        // 删除插件列表中的插件\n        delListItem(index) { this.form.pluginid_list.splice(index, 1) },\n        // + 修改 获取当前任务信息\n        getDetail(id) {\n            TaskDetail({task_id: id}).then((response) => {\n                let target = response.data.target_list\n                let target_str = \"\"\n                for (let i=0;i<target.length;i++){\n                    target_str = target_str + target[i] + '\\n'\n                }\n                this.form = {\n                    task_name: response.data.task_name,\n                    target_list: target_str,\n                    pluginid_list: response.data.pluginid_list,\n                    recursion: response.data.recursion\n                }\n                this.matchPlugin(response.data.pluginid_list)\n                setTimeout(() => { this.isLoading = false; }, 1.5 * 1000);\n            });\n        },\n        // + 修改 pluginid_list匹配插件详情\n        matchPlugin(array){\n            let index_list = []\n            for (let i=0;i<this.plugin_list.length;i++){\n                for(let j=0;j<array.length;j++){\n                    if (array[j]==this.plugin_list[i]._id){\n                        index_list.push(i)\n                        break\n                    }\n                }\n            }\n            this.form.pluginid_list = index_list\n        },\n        // 获取Poc插件列表\n        getPlugins(){\n            let query = {page_no: 1, page_size: 100, info: \"\"} //页码、条数、查询字段\n            PluginList(query).then((response)=>{\n                this.plugin_list = response.data.list\n            }).catch(() => {\n                this.$notify({title: \"Error\", message: \"Failed Get Plugin Data\", type: \"danger\", duration: 5000})\n            })\n        },\n    }\n}\n</script>\n\n<style>\n.mixin-components-container {\n    background-color: #f0f2f5;\n    padding: 30px;\n    min-height: calc(100vh - 84px);\n}\n.text {\n    font-size: 14px;\n}\n.clearfix:before,\n.clearfix:after {\n    display: table;\n    content: \"\";\n}\n.clearfix:after {\n    clear: both;\n}\n.box-card-in {\n    width: 60%;\n}\n.dump-box {\n    font-weight: 700;\n    color: #606266;\n}\n</style>"],"sourceRoot":"src/views/poc-vul"}]}