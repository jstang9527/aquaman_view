{"remainingRequest":"/home/views/aquaman_view/node_modules/babel-loader/lib/index.js!/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/views/aquaman_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/aquaman_view/src/views/auth-tester/task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/views/aquaman_view/src/views/auth-tester/task.vue","mtime":1601436512752},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/babel-loader/lib/index.js","mtime":1601261365222},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js","mtime":1601261366062}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["task.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"mixin-components-container\">\n    <el-row>\n      <el-card class=\"box-card\">\n        <div slot=\"header\" class=\"clearfix\">\n          <span>{{title}}</span>\n        </div>\n        <div style=\"margin-bottom:50px;\">\n          <el-form ref=\"form\" :model=\"form\" label-width=\"140px\">\n            <el-form-item label=\"任务名\" class=\"is-required\">\n              <el-input v-model=\"form.task_name\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"任务目标\" class=\"is-required\">\n              <el-input type=\"textarea\" v-model=\"form.target_list\" :autosize=\"{ minRows: 3, maxRows: 6}\" placeholder=\"格式:http://example.com,多条换行\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"任务周期\">\n              <el-select v-model=\"form.recursion\" placeholder=\"请选择\" style=\"width:200px\">\n                <el-option label=\"一次\" :value=\"0\"></el-option>\n                <el-option label=\"每天\" :value=\"1\"></el-option>\n                <el-option label=\"每周\" :value=\"7\"></el-option>\n                <el-option label=\"每月\" :value=\"30\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"参数\">\n              <el-input v-model=\"form.args\" placeholder=\"如添加参数如-t 20进行设置线程数, 具体可看hydra命令参数文档\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"协议选择\">\n              <el-select v-model=\"form.service\" multiple placeholder=\"请选择\" style=\"width:100%\">\n                <el-option v-for=\"(index,item) in service_list\" :key=\"item\" :label=\"index\" :value=\"index\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"账户字典\"> \n                <el-input type=\"textarea\" :rows=\"2\" placeholder=\"null\" v-model=\"username_list\" disabled></el-input> \n            </el-form-item>\n            <el-form-item label=\"密码字典\"> \n                <el-input type=\"textarea\" :rows=\"2\" placeholder=\"null\" v-model=\"password_list\" disabled></el-input> \n            </el-form-item>\n            <el-form-item>\n              <el-button v-if=\"isEditPage\" type=\"danger\" :disabled=\"submitBtnDisabled\" @click=\"onUpdate()\">提交修改</el-button>\n              <el-button v-else type=\"primary\" :disabled=\"submitBtnDisabled\" @click=\"onSubmit()\">立即创建</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </el-card>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { UpdateTask } from \"@/api/mars\";\nimport { ConfigData, AddTask, TaskDetail } from \"@/api/auth_tester\"\nimport { date } from 'jszip/lib/defaults';\nexport default {\n  data() {\n    return {\n      isEditPage: false, //是创建还是修改任务的页面？\n      submitBtnDisabled: false,\n      title: \"创建任务\",\n      form: {\n        args: \"\",\n        recursion: 0,\n        target_list: \"\",\n        task_name: \"\",\n        service: [],\n      },\n      username_list: \"\",\n      password_list: \"\",\n      service_list: [\n          \"ASTERISK\", \"CISCO\", \"CISCO-ENABLE\", \"CVS\",\"FIREBIRD\",\"FTP\",\"FTPS\",\"HTTP_PROXY\",\"HTTP_PROXY-URLENUM\",\"ICQ\",\"IMAP\",\"IRC\",\"LDAP2\",\n          \"MSSQL\",\"MYSQL\",\"NNTP\",\"ORACLE-LISTENER\",\"ORACLE-SID\",\"PCANYWHERE\",\"PCNFS\",\"POP3\",\"POSTGRES\",\"RDP\",\"REDIS\",\"REXEC\",\"RLOGIN\",\"RSH\",\n          \"S7-300\",\"SIP\",\"SMB\",\"SMTP\",\"SMTP-ENUM\",\"SNMP\",\"SOCKS5\",\"SSH\",\"SSHKEY\",\"SVN\",\"TEAMSPEAK\",\"TELNET\",\"VMAUTHD\",\"VNC\",\"XMPP\"\n      ],\n      task_id: undefined,\n    };\n  },\n  created() {\n    this.getDataCfg()\n    let id = this.$route.query.id\n    if (id) { //点击修改页面的跳转id uri参数(?id=64)\n      // 如果有id,查DB进行赋值\n      this.title = \"修改任务\"\n      this.isEditPage = true\n      this.isLoading = true\n      this.task_id = Number(id)\n      this.getDetail(id)\n    }\n  },\n  methods: {\n    // 表格格式检查\n    formCheck() {\n      if (this.form.task_name.trim() == \"\") { this.$message({ message: \"任务名必填\", type: \"warning\" }); return false }\n      if (this.form.target_list.trim() == \"\") { this.$message({ message: \"任务目标必填\", type: \"warning\" }); return false }\n      if (this.form.service.length == 0) { this.$message({ message: \"协议至少选择一项\", type: \"warning\" }); return false }\n      return true\n    },\n    // 关闭子页\n    closeChildPage() {\n      this.$router.go(-1)\n      this.$store.state.tagsView.visitedViews.splice(this.$store.state.tagsView.visitedViews.findIndex(item => item.path === this.$route.path), 1)\n      this.$router.push(this.$store.state.tagsView.visitedViews[this.$store.state.tagsView.visitedViews.length - 1].path)\n    },\n    // 获取配置数据\n    getDataCfg(){\n        ConfigData().then((response) => {\n            this.username_list = response.data.username_list + []\n            this.password_list = response.data.password_list + []\n            this.service_list = response.data.service\n            // console.log(response.data)\n      }).catch(() => {\n        this.$notify({ title: \"Failed\", message: \"服务未得到响应\", type: \"error\", duration: 5000, });\n      });\n    },\n    // 更新任务\n    onUpdate() {\n      if (!this.formCheck()) { return }\n      this.submitBtnDisabled = true\n      //1.组装数据\n      let putData = {}\n      this.$notify({ title: \"Warning\", message: \"接口未实现, 请新建任务\", type: \"warning\", duration: 8000, });\n      //2.调API接口\n    //   UpdateTask(putData).then((response) => {\n    //     this.submitBtnDisabled = false;\n    //     this.clearFormData();\n    //     console.log(response.data)\n    //     this.$notify({ title: response.data, message: \"更新成功 [id: \" + this.task_id + \" ]\", type: \"success\", duration: 5000, });\n    //     this.closeChildPage()\n    //   }).catch(() => {\n    //     this.submitBtnDisabled = false;\n    //     this.$notify({ title: \"Failed\", message: \"更新失败 [id: \" + this.task_id + \" ]\", type: \"error\", duration: 5000, });\n    //   });\n    },\n    //创建任务\n    onSubmit() {\n      if (!this.formCheck()) { return }\n      this.submitBtnDisabled = true\n      //1.组装数据\n      let temp = this.form\n      let target_list = temp.target_list.split('\\n')\n      let tlist = []\n      \n      for (let i=0; i<target_list.length; i++){\n          let item = target_list[i].trim()\n          if (item != \"\"){\n              tlist.push(item)\n          }\n      }\n      let data = {\n        args: temp.args, recursion: temp.recursion, target_list: tlist, password_list: this.password_list,\n        task_name: temp.task_name, service: temp.service, username_list: this.username_list\n      }\n      //2.调API接口\n      AddTask(data).then((response) => {\n        this.submitBtnDisabled = false;\n        this.clearFormData();\n        this.$notify({ title: \"Success\", message: \"添加成功\" + response.errmsg + response.data.task_id, type: \"success\", duration: 5000, });\n      }).catch(() => {\n        this.submitBtnDisabled = false;\n        this.$notify({title: \"Failed\", message: \"添加失败\", type: \"error\", duration: 5000});\n      });\n    },\n    // 提交成功清空当前页面数据\n    clearFormData() {\n      this.form = { args: \"\", recursion: 0, target_list: \"\", task_name: \"\", service: [] }\n    },\n    getDetail(id) {\n      let query = { task_id: id }\n      TaskDetail(query).then((response) => {\n        this.submitBtnDisabled = false;\n        this.form.task_name = response.data.task_name;\n        this.form.service = response.data.service;\n        this.form.args = response.data.args;\n        this.form.recursion = response.data.recursion;\n        for (let i=0;i<response.data.target.length;i++){\n            this.form.target_list = this.form.target_list + response.data.target[i] + '\\n'\n            console.log(this.form.target_list)\n        }\n      }).catch(() => {\n        this.submitBtnDisabled = true;\n      });\n    },\n  }\n}\n</script>\n\n<style>\n.mixin-components-container {\n  background-color: #f0f2f5;\n  padding: 30px;\n  min-height: calc(100vh - 84px);\n}\n.text {\n  font-size: 14px;\n}\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n}\n.clearfix:after {\n  clear: both;\n}\n.box-card-in {\n  width: 60%;\n}\n.dump-box {\n  font-weight: 700;\n  color: #606266;\n}\n</style>"],"sourceRoot":"src/views/auth-tester"}]}