{"remainingRequest":"/home/views/aquaman_view/node_modules/babel-loader/lib/index.js!/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/views/aquaman_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/aquaman_view/src/views/chain/block_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/views/aquaman_view/src/views/chain/block_list.vue","mtime":1601261308739},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/babel-loader/lib/index.js","mtime":1601261365222},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/vue-loader/lib/index.js","mtime":1601261366062}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgYmxvY2tMaXN0LCBibG9ja0RldGFpbCB9IGZyb20gIkAvYXBpL2NoYWluIjsKaW1wb3J0IHdhdmVzIGZyb20gIkAvZGlyZWN0aXZlL3dhdmVzIjsgLy8gd2F2ZXMgZGlyZWN0aXZlCgppbXBvcnQgUGFnaW5hdGlvbiBmcm9tICJAL2NvbXBvbmVudHMvUGFnaW5hdGlvbiI7IC8vIHNlY29uZGFyeSBwYWNrYWdlIGJhc2VkIG9uIGVsLXBhZ2luYXRpb24KCnZhciBsb2FkVHlwZU9wdGlvbnMgPSBbewogIGtleTogIjEiLAogIGRpc3BsYXlfbmFtZTogIkxvdyIKfSwgewogIGtleTogIjIiLAogIGRpc3BsYXlfbmFtZTogIk5vbWFsIgp9LCB7CiAga2V5OiAiMyIsCiAgZGlzcGxheV9uYW1lOiAiSGlnaCIKfV07CnZhciBsb2FkVHlwZUtleVZhbHVlID0gbG9hZFR5cGVPcHRpb25zLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBjdXIpIHsKICBhY2NbY3VyLmtleV0gPSBjdXIuZGlzcGxheV9uYW1lOwogIHJldHVybiBhY2M7Cn0sIHt9KTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJzZXJ2aWNlX2xpc3QiLAogIGNvbXBvbmVudHM6IHsKICAgIFBhZ2luYXRpb246IFBhZ2luYXRpb24KICB9LAogIGRpcmVjdGl2ZXM6IHsKICAgIHdhdmVzOiB3YXZlcwogIH0sCiAgZmlsdGVyczogewogICAgbG9hZFR5cGVGaWx0ZXI6IGZ1bmN0aW9uIGxvYWRUeXBlRmlsdGVyKHR5cGUpIHsKICAgICAgcmV0dXJuIGxvYWRUeXBlS2V5VmFsdWVbdHlwZV07CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFibGVLZXk6IDAsCiAgICAgIGxpc3Q6IFt7CiAgICAgICAgaWQ6ICIxMjMiLAogICAgICAgIGJsb2NrX25hbWU6ICJ0ZW1wIiwKICAgICAgICBwcmlvcml0eTogdW5kZWZpbmVkLAogICAgICAgIGV4cGVjdDogdW5kZWZpbmVkLAogICAgICAgIGFjdGlvbnM6IFt7CiAgICAgICAgICAiaWQiOiAxLAogICAgICAgICAgImJsb2NrX2lkIjogMSwKICAgICAgICAgICJhY3Rpb25fbmFtZSI6ICLmiZPlvIDnmbvlvZXpobUiCiAgICAgICAgfSwgewogICAgICAgICAgImlkIjogMiwKICAgICAgICAgICJibG9ja19pZCI6IDEsCiAgICAgICAgICAiYWN0aW9uX25hbWUiOiAi6L6T5YWl55So5oi35ZCNIgogICAgICAgIH1dCiAgICAgIH1dLAogICAgICB0b3RhbDogMCwKICAgICAgbGlzdExvYWRpbmc6IGZhbHNlLAogICAgICBsaXN0UXVlcnk6IHsKICAgICAgICBwYWdlX25vOiAxLAogICAgICAgIHBhZ2Vfc2l6ZTogMjAsCiAgICAgICAgaW5mbzogIiIKICAgICAgfSAvL+mhteeggeOAgeadoeaVsOOAgeafpeivouWtl+autQoKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRMaXN0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDojrflj5bnu4Tku7bor6bmg4UKICAgIGdldEJsb2NrRGV0YWlsOiBmdW5jdGlvbiBnZXRCbG9ja0RldGFpbChsaXN0LCB0b3RhbCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHF1ZXJ5ID0gewogICAgICAgIGlkOiAwCiAgICAgIH07IC8vIGxldCBpdGVtID0gdW5kZWZpbmVkOwoKICAgICAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoaSkgewogICAgICAgIHZhciBpdGVtID0gbGlzdFtpXTsKICAgICAgICBxdWVyeSA9IHsKICAgICAgICAgIGlkOiBpdGVtLmlkCiAgICAgICAgfTsKICAgICAgICBibG9ja0RldGFpbChxdWVyeSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIHZhciB0ZW1wID0gewogICAgICAgICAgICBpZDogaXRlbS5pZCwKICAgICAgICAgICAgYmxvY2tfbmFtZTogaXRlbS5ibG9ja19uYW1lLAogICAgICAgICAgICBwcmlvcml0eTogaXRlbS5wcmlvcml0eSwKICAgICAgICAgICAgZXhwZWN0OiBpdGVtLmV4cGVjdCwKICAgICAgICAgICAgYWN0aW9uczogcmVzcG9uc2UuZGF0YS5hY3Rpb25zCiAgICAgICAgICB9OwogICAgICAgICAgbGlzdFtpXSA9IHRlbXA7CiAgICAgICAgfSk7CiAgICAgIH07CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICBfbG9vcChpKTsKICAgICAgfQoKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMubGlzdCA9IGxpc3Q7CiAgICAgICAgX3RoaXMudG90YWwgPSB0b3RhbDsKICAgICAgfSwgMSAqIDIwMCk7CiAgICB9LAogICAgLy8g6I635Y+W5YiX6KGoCiAgICBnZXRMaXN0OiBmdW5jdGlvbiBnZXRMaXN0KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlOwogICAgICBibG9ja0xpc3QodGhpcy5saXN0UXVlcnkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgdmFyIGxpc3QgPSByZXNwb25zZS5kYXRhLmxpc3Q7CiAgICAgICAgdmFyIHRvdGFsID0gcmVzcG9uc2UuZGF0YS50b3RhbDsKCiAgICAgICAgX3RoaXMyLmdldEJsb2NrRGV0YWlsKGxpc3QsIHRvdGFsKTsKCiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczIubGlzdExvYWRpbmcgPSBmYWxzZTsKICAgICAgICB9LCAxLjUgKiAxMDAwKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5YWz6ZSu6K+N5p+l6K+iCiAgICBoYW5kbGVGaWx0ZXI6IGZ1bmN0aW9uIGhhbmRsZUZpbHRlcigpIHsKICAgICAgdGhpcy5saXN0UXVlcnkucGFnZV9ubyA9IDE7CiAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgfSwKICAgIC8vIOWIoOmZpOiusOW9lQogICAgaGFuZGxlRGVsZXRlOiBmdW5jdGlvbiBoYW5kbGVEZWxldGUocm93LCBpbmRleCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHRoaXMuJGNvbmZpcm0oIuatpOaTjeS9nOWwhuWIoOmZpOivpeiusOW9lSwg5bey6KKr57uE6KOF5LiK55qE5rWB5rC057q/5LiN5Lya5Zug5q2k5Y+X5b2x5ZONLCDmmK/lkKbnu6fnu60/IiwgIuaPkOekuiIsIHsKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogIuehruWumiIsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIuWPlua2iCIsCiAgICAgICAgdHlwZTogIndhcm5pbmciCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnNvbGUubG9nKHJvdywgaW5kZXgpOyAvLyBsZXQgZGVsZXRlUXVlcnkgPSB7IGlkOiByb3cuaWQgfTsKICAgICAgICAvLyBzZXJ2aWNlRGVsZXRlKGRlbGV0ZVF1ZXJ5KS50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgIC8vICAgdGhpcy4kbm90aWZ5KHsgdGl0bGU6ICJTdWNjZXNzIiwgbWVzc2FnZTogIkRlbGV0ZSBTdWNjZXNzZnVsbHkiICsgcmVzcG9uc2UuZGF0YS5lcnJtc2csIHR5cGU6ICJzdWNjZXNzIiwgZHVyYXRpb246IDMwMDAsIH0pOwogICAgICAgIC8vICAgdGhpcy5saXN0LnNwbGljZShpbmRleCwgMSk7CiAgICAgICAgLy8gfSk7CgogICAgICAgIF90aGlzMy4kbm90aWZ5KHsKICAgICAgICAgIHRpdGxlOiAiU3VjY2VzcyIsCiAgICAgICAgICBtZXNzYWdlOiAi5o6l5Y+j5pyq5a6e546wIiwKICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgIGR1cmF0aW9uOiA1MDAwCiAgICAgICAgfSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczMuJG5vdGlmeSh7CiAgICAgICAgICB0aXRsZTogIkNhbmNlbCIsCiAgICAgICAgICBtZXNzYWdlOiAiRGVsZXRlIENhbmNlbCIsCiAgICAgICAgICB0eXBlOiAiaW5mbyIsCiAgICAgICAgICBkdXJhdGlvbjogNTAwMAogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["block_list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-input v-model=\"listQuery.info\" placeholder=\"BlockName\" style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n      <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">Search</el-button>\n      <router-link :to=\"'/chain/block'\">\n        <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\">Add</el-button>\n      </router-link>\n    </div>\n\n    <el-table :key=\"tableKey\" v-loading=\"listLoading\" element-loading-text=\"玩命加载中\" element-loading-spinner=\"el-icon-loading\" element-loading-background=\"rgba(0, 0, 0, 0.8)\" :data=\"list\" border fit highlight-current-row style=\"width: 100%;\">\n      <el-table-column label=\"ID\" prop=\"id\" align=\"center\" width=\"60\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"BlockName\" min-width=\"120px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.block_name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Priority\" min-width=\"70px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <!-- <span>{{ row.priority|loadTypeFilter }}</span> -->\n          <el-rate disabled :show-score=\"false\" text-color=\"#ff9900\" v-model=\"row.priority\"></el-rate>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Expect\" min-width=\"30px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <span>{{ row.expect }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"Actions\" min-width=\"300px\" align=\"center\">\n        <template slot-scope=\"{row}\">\n          <el-tag v-for=\"(item,index) in row.actions\" :key=\"index\" type=\"success\" effect=\"plain\" style=\"margin-right:10px;margin-top:2px\">{{ item.action_name }}</el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"Operation\" align=\"center\" width=\"200\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"{row,$index}\">\n          <router-link :to=\"'/chain/update_block?id='+row.id\">\n            <el-button type=\"primary\" size=\"mini\" class=\"operation-btn\">edit</el-button>\n          </router-link>\n          <el-button type=\"danger\" size=\"mini\" @click=\"handleDelete(row,$index)\" disabled>delete</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n  </div>\n</template>\n\n<script>\nimport { blockList, blockDetail } from \"@/api/chain\"\nimport waves from \"@/directive/waves\"; // waves directive\nimport Pagination from \"@/components/Pagination\"; // secondary package based on el-pagination\n\nconst loadTypeOptions = [\n  { key: \"1\", display_name: \"Low\" },\n  { key: \"2\", display_name: \"Nomal\" },\n  { key: \"3\", display_name: \"High\" },\n];\n\nconst loadTypeKeyValue = loadTypeOptions.reduce((acc, cur) => {\n  acc[cur.key] = cur.display_name;\n  return acc;\n}, {});\n\nexport default {\n  name: \"service_list\",\n  components: { Pagination },\n  directives: { waves },\n  filters: {\n    loadTypeFilter(type) {\n      return loadTypeKeyValue[type];\n    },\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: [\n        {\n          id: \"123\",\n          block_name: \"temp\",\n          priority: undefined,\n          expect: undefined,\n          actions: [\n            {\n              \"id\": 1,\n              \"block_id\": 1,\n              \"action_name\": \"打开登录页\",\n            },\n            {\n              \"id\": 2,\n              \"block_id\": 1,\n              \"action_name\": \"输入用户名\",\n            },\n          ]\n        },\n      ],\n      total: 0,\n      listLoading: false,\n      listQuery: {\n        page_no: 1, page_size: 20, info: \"\",\n      }, //页码、条数、查询字段\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    // 获取组件详情\n    getBlockDetail(list, total) {\n      let query = { id: 0 };\n      // let item = undefined;\n      for (let i = 0; i < list.length; i++) {\n        let item = list[i]\n        query = { id: item.id }\n        blockDetail(query).then((response) => {\n          let temp = {\n            id: item.id,\n            block_name: item.block_name,\n            priority: item.priority,\n            expect: item.expect,\n            actions: response.data.actions\n          }\n          list[i] = temp\n        });\n      }\n      setTimeout(() => { this.list = list; this.total = total }, 1 * 200);\n    },\n    // 获取列表\n    getList() {\n      this.listLoading = true;\n      blockList(this.listQuery).then((response) => {\n        let list = response.data.list;\n        let total = response.data.total;\n        this.getBlockDetail(list, total)\n        setTimeout(() => { this.listLoading = false; }, 1.5 * 1000);\n      });\n    },\n    // 关键词查询\n    handleFilter() {\n      this.listQuery.page_no = 1;\n      this.getList();\n    },\n    // 删除记录\n    handleDelete(row, index) {\n      this.$confirm(\"此操作将删除该记录, 已被组装上的流水线不会因此受影响, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n      }).then(() => {\n        console.log(row, index)\n        // let deleteQuery = { id: row.id };\n        // serviceDelete(deleteQuery).then((response) => {\n        //   this.$notify({ title: \"Success\", message: \"Delete Successfully\" + response.data.errmsg, type: \"success\", duration: 3000, });\n        //   this.list.splice(index, 1);\n        // });\n        this.$notify({\n          title: \"Success\", message: \"接口未实现\", type: \"success\", duration: 5000,\n        });\n      }).catch(() => {\n        this.$notify({\n          title: \"Cancel\", message: \"Delete Cancel\", type: \"info\", duration: 5000,\n        });\n      });\n    },\n  },\n};\n</script>\n\n<style>\n.operation-btn {\n  margin-right: 10px;\n}\n</style>"],"sourceRoot":"src/views/chain"}]}