{"remainingRequest":"/home/views/opentest_view/node_modules/babel-loader/lib/index.js!/home/views/opentest_view/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/views/opentest_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/opentest_view/src/views/nodes/mixin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/views/opentest_view/src/views/nodes/mixin.vue","mtime":1596796710104},{"path":"/home/views/opentest_view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/views/opentest_view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/views/opentest_view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/views/opentest_view/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZG9tYWluTGlzdCwgZG9tYWluU3RhdHVzLCBkb21haW5Eb3duLCBkb21haW5TdGFydCwgZG9tYWluUmVjb3ZlciB9IGZyb20gIkAvYXBpL2RvbWFpbiI7CmltcG9ydCB3YXZlcyBmcm9tICJAL2RpcmVjdGl2ZS93YXZlcy9pbmRleC5qcyI7IC8vIOawtOazoue6ueaMh+S7pAoKdmFyIGRvbWFpblR5cGVPcHRpb25zID0gW3sKICBrZXk6ICIwIiwKICBkaXNwbGF5X25hbWU6ICLniannkIbmnLoiCn0sIHsKICBrZXk6ICIxIiwKICBkaXNwbGF5X25hbWU6ICLkupHkuLvmnLoiCn0sIHsKICBrZXk6ICIyIiwKICBkaXNwbGF5X25hbWU6ICLomZrmi5/mnLoiCn1dOwp2YXIgZG9tYWluVHlwZUtleVZhbHVlID0gZG9tYWluVHlwZU9wdGlvbnMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGN1cikgewogIGFjY1tjdXIua2V5XSA9IGN1ci5kaXNwbGF5X25hbWU7CiAgcmV0dXJuIGFjYzsKfSwge30pOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIm5vZGVzIiwKICBkaXJlY3RpdmVzOiB7CiAgICB3YXZlczogd2F2ZXMKICB9LAogIGZpbHRlcnM6IHsKICAgIGRvbWFpblR5cGVGaWx0ZXI6IGZ1bmN0aW9uIGRvbWFpblR5cGVGaWx0ZXIodHlwZSkgewogICAgICByZXR1cm4gZG9tYWluVHlwZUtleVZhbHVlW3R5cGVdOwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGFzOiB7CiAgICAgICAgY3VyT3BlcmF0aW9uOiAiMSIKICAgICAgfSwKICAgICAgdGFibGVLZXk6IDAsCiAgICAgIGxpc3Q6IFt7CiAgICAgICAgaWQ6ICIzIiwKICAgICAgICBkb21haW46ICJleGFtcGxlIiwKICAgICAgICBkb21haW5faXA6ICIxNzIuMzEuNTAuMjUyIiwKICAgICAgICBkb21haW5fdHlwZTogMCwKICAgICAgICBkb21haW5fb3M6ICJjZW50b3M3LjUiLAogICAgICAgIGRvbWFpbl9zdGF0dXM6IGZhbHNlLAogICAgICAgIGhvc3RfaXA6ICIxNzIuMzEuNTAuMjU0IiwKICAgICAgICBob3N0X2Rlc2M6ICJEZWxsIFIzMjAiLAogICAgICAgIGRvbWFpbl9kZXNjOiAi5a2X5q615qC85byP5qCh6aqMIgogICAgICB9XSwKICAgICAgdG90YWw6IDEsCiAgICAgIGxpc3RMb2FkaW5nOiBmYWxzZSwKICAgICAgbGlzdFF1ZXJ5OiB7CiAgICAgICAgcGFnZV9ubzogMSwKICAgICAgICBwYWdlX3NpemU6IDIwLAogICAgICAgIGluZm86ICIiCiAgICAgIH0sCiAgICAgIHRlbXA6IHsKICAgICAgICBpZDogdW5kZWZpbmVkCiAgICAgIH0gLy/kuLTml7blrZjlgqjlj5jph4/msaAKCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8vIOiOt+WPluWfn+WIl+ihqAogICAgdGhpcy5nZXRMaXN0KCk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBpZiAodGhpcy50aW1lcikgewogICAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICAvL+WumuaXtuiOt+WPluWIl+ihqOWfn+eahOeKtuaAgQogICAgICAgIF90aGlzLnJlZnJlc2hMaXN0U3RhdHVlKCk7CiAgICAgIH0sIDEwICogMTAwMCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzaG93UGFuYWw6IGZ1bmN0aW9uIHNob3dQYW5hbChpbmRleCkgewogICAgICB0aGlzLmRhdGFzLmN1ck9wZXJhdGlvbiA9IGluZGV4OwogICAgfSwKICAgIC8vIOiOt+WPluWfn+WIl+ihqAogICAgZ2V0TGlzdDogZnVuY3Rpb24gZ2V0TGlzdCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZTsKICAgICAgZG9tYWluTGlzdCh0aGlzLmxpc3RRdWVyeSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczIubGlzdCA9IHJlc3BvbnNlLmRhdGEubGlzdDsKICAgICAgICBfdGhpczIudG90YWwgPSByZXNwb25zZS5kYXRhLnRvdGFsOyAvLyDkvJrlnKgxLjXnp5LlkI7pmpDol49sb2FkaW5nCgogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXMyLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgfSwgMS41ICogMTAwMCk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOabtOaWsOWfn+eKtuaAgQogICAgcmVmcmVzaExpc3RTdGF0dWU6IGZ1bmN0aW9uIHJlZnJlc2hMaXN0U3RhdHVlKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKCkgewogICAgICAgIHZhciBpdGVtID0gX3RoaXMzLmxpc3RbaV07CiAgICAgICAgdmFyIHBhcmFtcyA9IHsKICAgICAgICAgIGRvbWFpbjogaXRlbS5kb21haW4sCiAgICAgICAgICBob3N0X2lwOiBpdGVtLmhvc3RfaXAKICAgICAgICB9OwogICAgICAgIGRvbWFpblN0YXR1cyhwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBpdGVtLmRvbWFpbl9zdGF0dXMgPSByZXNwb25zZS5kYXRhLmlzUnVubmluZzsKICAgICAgICB9KTsKICAgICAgICBfdGhpczMubGlzdFtpXSA9IGl0ZW07CiAgICAgIH07CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgIF9sb29wKCk7CiAgICAgIH0KICAgIH0sCiAgICAvL+afpeivouaTjeS9nCzku47nrKzkuIDpobXlvIDlp4sKICAgIGhhbmRsZUZpbHRlcjogZnVuY3Rpb24gaGFuZGxlRmlsdGVyKCkgewogICAgICB0aGlzLmxpc3RRdWVyeS5wYWdlX25vID0gMTsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgLy8g5YWz6Zet5Z+fCiAgICBzaHV0ZG93bkRvbWFpbjogZnVuY3Rpb24gc2h1dGRvd25Eb21haW4ocm93KSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdmFyIHBhcmFtcyA9IHsKICAgICAgICBkb21haW46IHJvdy5kb21haW4sCiAgICAgICAgaG9zdF9pcDogcm93Lmhvc3RfaXAKICAgICAgfTsKICAgICAgZG9tYWluRG93bihwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwoKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5lcnJtc2cgPT0gIiIpIHsKICAgICAgICAgIF90aGlzNC4kbm90aWZ5KHsKICAgICAgICAgICAgdGl0bGU6ICJTdWNjZXNzIiwKICAgICAgICAgICAgbWVzc2FnZTogIlNodXRkb3duICIgKyBwYXJhbXMuZG9tYWluLAogICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAwCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXM0LiRub3RpZnkoewogICAgICAgICAgICB0aXRsZTogIkZhaWxlZCIsCiAgICAgICAgICAgIG1lc3NhZ2U6IHJlc3BvbnNlLmRhdGEuZXJybXNnLAogICAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAwCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOW8gOWQr+WfnwogICAgc3RhcnREb21haW46IGZ1bmN0aW9uIHN0YXJ0RG9tYWluKHJvdykgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHZhciBwYXJhbXMgPSB7CiAgICAgICAgZG9tYWluOiByb3cuZG9tYWluLAogICAgICAgIGhvc3RfaXA6IHJvdy5ob3N0X2lwCiAgICAgIH07CiAgICAgIGRvbWFpblN0YXJ0KHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CgogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmVycm1zZyA9PSAiIikgewogICAgICAgICAgX3RoaXM1LiRub3RpZnkoewogICAgICAgICAgICB0aXRsZTogIlN1Y2Nlc3MiLAogICAgICAgICAgICBtZXNzYWdlOiAiU3RhcnQgIiArIHBhcmFtcy5kb21haW4sCiAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgZHVyYXRpb246IDUwMDAKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczUuJG5vdGlmeSh7CiAgICAgICAgICAgIHRpdGxlOiAiRmFpbGVkIiwKICAgICAgICAgICAgbWVzc2FnZTogcmVzcG9uc2UuZGF0YS5lcnJtc2csCiAgICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgICAgICAgZHVyYXRpb246IDUwMDAKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8g5oGi5aSN5Z+fCiAgICByZWNvdmVyRG9tYWluOiBmdW5jdGlvbiByZWNvdmVyRG9tYWluKHJvdykgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIHZhciBwYXJhbXMgPSB7CiAgICAgICAgZG9tYWluOiByb3cuZG9tYWluLAogICAgICAgIGhvc3RfaXA6IHJvdy5ob3N0X2lwCiAgICAgIH07CiAgICAgIGRvbWFpblJlY292ZXIocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKCiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuZXJybXNnID09ICIiKSB7CiAgICAgICAgICBfdGhpczYuJG5vdGlmeSh7CiAgICAgICAgICAgIHRpdGxlOiAiU3VjY2VzcyIsCiAgICAgICAgICAgIG1lc3NhZ2U6ICJSZWNvdmVyICIgKyBwYXJhbXMuZG9tYWluLAogICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAwCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXM2LiRub3RpZnkoewogICAgICAgICAgICB0aXRsZTogIkZhaWxlZCIsCiAgICAgICAgICAgIG1lc3NhZ2U6IHJlc3BvbnNlLmRhdGEuZXJybXNnLAogICAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAwCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8v5Yig6Zmk6KGo6K6w5b2VCiAgICBoYW5kbGVEZWxldGU6IGZ1bmN0aW9uIGhhbmRsZURlbGV0ZSgpIHt9CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcik7CiAgfQp9Ow=="},{"version":3,"sources":["mixin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"mixin-components-container\">\n    <el-row>\n      <el-card class=\"box-card\">\n        <div slot=\"header\" class=\"clearfix\">\n          <span>选项卡</span>\n        </div>\n        <div style=\"margin-bottom:50px;\">\n          <el-col :span=\"4\" class=\"text-center\">\n            <button class=\"pan-btn blue-btn\" v-on:click=\"showPanal('1')\">主机列表</button>\n          </el-col>\n          <el-col :span=\"4\" class=\"text-center\">\n            <button class=\"pan-btn light-blue-btn\" v-on:click=\"showPanal('2')\">威胁总览</button>\n          </el-col>\n          <el-col :span=\"4\" class=\"text-center\">\n            <el-badge :value=\"12\">\n              <button class=\"pan-btn pink-btn\" v-on:click=\"showPanal('3')\">告警列表</button>\n            </el-badge>\n          </el-col>\n          <el-col :span=\"4\" class=\"text-center\">\n            <button class=\"pan-btn green-btn\" v-on:click=\"showPanal('4')\">实时监控</button>\n          </el-col>\n          <el-col :span=\"4\" class=\"text-center\">\n            <button class=\"pan-btn tiffany-btn\" v-on:click=\"showPanal('5')\">系统配置</button>\n          </el-col>\n          <el-col :span=\"4\" class=\"text-center\">\n            <button class=\"pan-btn yellow-btn\" v-on:click=\"showPanal('6')\">错误日志</button>\n          </el-col>\n        </div>\n      </el-card>\n    </el-row>\n\n    <!-- <div ><h1>主机列表-table组件</h1></div>-->\n    <div class=\"app-container\" v-if=\"datas.curOperation==='1'\">\n      <div class=\"filter-container\">\n        <el-input v-model=\"listQuery.info\" placeholder=\"主机名\" style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n        <el-button v-waves class=\"filter-item\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">Search</el-button>\n        <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleDelete\">Add</el-button>\n      </div>\n      <el-table :key=\"tableKey\" v-loading=\"listLoading\" element-loading-text=\"玩命加载中\" element-loading-spinner=\"el-icon-loading\" element-loading-background=\"rgba(0, 0, 0, 0.8)\" :data=\"list\" border fit highlight-current-row style=\"width: 100%;\">\n        <el-table-column label=\"ID\" prop=\"id\" align=\"center\" width=\"60\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row.id }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"域\" align=\"center\" min-width=\"50px\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row.domain }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"域IP\" align=\"center\" min-width=\"70px\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row.domain_ip }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"类型\" min-width=\"50px\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row.domain_type|domainTypeFilter }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作系统\" align=\"center\" min-width=\"70px\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row.domain_os }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\" label=\"域描述\" min-width=\"150px\">\n          <template slot-scope=\"{row}\">\n            <span>{{ row.domain_desc }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"状态\" align=\"center\" min-width=\"50px\">\n          <template slot-scope=\"{row}\">\n            <el-button v-if=\"row.domain_status\" type=\"success\" icon=\"el-icon-loading\" size=\"mini\" circle></el-button>\n            <el-button v-else type=\"danger\" icon=\"el-icon-warning-outline\" size=\"mini\" circle></el-button>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"350\" class-name=\"small-padding fixed-width\">\n          <template slot-scope=\"{row,$index}\">\n            <el-popconfirm confirmButtonText=\"确定\" cancelButtonText=\"取消\" icon=\"el-icon-info\" iconColor=\"orange\" title=\"Are you sure ???\" class=\"operation-btn\" @onConfirm=\"startDomain(row)\">\n              <el-button slot=\"reference\" type=\"primary\" size=\"mini\">启动</el-button>\n            </el-popconfirm>\n            <el-popconfirm confirmButtonText=\"确定\" cancelButtonText=\"取消\" icon=\"el-icon-info\" iconColor=\"red\" title=\"Are you sure ???\" class=\"operation-btn\" @onConfirm=\"shutdownDomain(row)\">\n              <el-button slot=\"reference\" type=\"info\" size=\"mini\">关机</el-button>\n            </el-popconfirm>\n            <el-popconfirm confirmButtonText=\"确定\" cancelButtonText=\"取消\" icon=\"el-icon-info\" iconColor=\"red\" title=\"Are you sure ???\" class=\"operation-btn\" @onConfirm=\"recoverDomain(row)\">\n              <el-button slot=\"reference\" type=\"warning\" size=\"mini\">还原</el-button>\n            </el-popconfirm>\n            <el-popconfirm confirmButtonText=\"确定\" cancelButtonText=\"取消\" icon=\"el-icon-info\" iconColor=\"red\" title=\"Are you crazy !!!\" class=\"operation-btn\" @onConfirm=\"handleDelete(row,$index)\">\n              <!-- <el-button slot=\"reference\" type=\"danger\" size=\"mini\" @click=\"handleDelete(row,$index)\">移除</el-button> -->\n              <el-button slot=\"reference\" type=\"danger\" size=\"mini\">移除</el-button>\n            </el-popconfirm>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n    </div>\n    <div v-if=\"datas.curOperation==='2'\">\n      <h1>威胁总览-chart+table组件</h1>\n    </div>\n    <div v-if=\"datas.curOperation==='3'\">\n      <h1>告警列表table组件</h1>\n    </div>\n    <div v-if=\"datas.curOperation==='4'\">\n      <h1>实时监控-chart+table组件</h1>\n    </div>\n    <div v-if=\"datas.curOperation==='5'\">\n      <h1>系统配置edit组件</h1>\n    </div>\n    <div v-if=\"datas.curOperation==='6'\">\n      <h1>错误日志table组件</h1>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  domainList,\n  domainStatus,\n  domainDown,\n  domainStart,\n  domainRecover,\n} from \"@/api/domain\";\nimport waves from \"@/directive/waves/index.js\"; // 水波纹指令\n\nconst domainTypeOptions = [\n  { key: \"0\", display_name: \"物理机\" },\n  { key: \"1\", display_name: \"云主机\" },\n  { key: \"2\", display_name: \"虚拟机\" },\n];\n\nconst domainTypeKeyValue = domainTypeOptions.reduce((acc, cur) => {\n  acc[cur.key] = cur.display_name;\n  return acc;\n}, {});\n\nexport default {\n  name: \"nodes\",\n  directives: { waves },\n  filters: {\n    domainTypeFilter(type) {\n      return domainTypeKeyValue[type];\n    },\n  },\n  data() {\n    return {\n      datas: { curOperation: \"1\" },\n      tableKey: 0,\n      list: [\n        {\n          id: \"3\",\n          domain: \"example\",\n          domain_ip: \"172.31.50.252\",\n          domain_type: 0,\n          domain_os: \"centos7.5\",\n          domain_status: false,\n          host_ip: \"172.31.50.254\",\n          host_desc: \"Dell R320\",\n          domain_desc: \"字段格式校验\",\n        },\n      ],\n      total: 1,\n      listLoading: false,\n      listQuery: { page_no: 1, page_size: 20, info: \"\" },\n      temp: { id: undefined }, //临时存储变量池\n    };\n  },\n  created() {\n    // 获取域列表\n    this.getList();\n  },\n  mounted() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    } else {\n      this.timer = setInterval(() => {\n        //定时获取列表域的状态\n        this.refreshListStatue();\n      }, 10 * 1000);\n    }\n  },\n  methods: {\n    showPanal: function (index) {\n      this.datas.curOperation = index;\n    },\n    // 获取域列表\n    getList() {\n      this.listLoading = true;\n      domainList(this.listQuery).then((response) => {\n        this.list = response.data.list;\n        this.total = response.data.total;\n        // 会在1.5秒后隐藏loading\n        setTimeout(() => {\n          this.listLoading = false;\n        }, 1.5 * 1000);\n      });\n    },\n    // 更新域状态\n    refreshListStatue() {\n      for (var i = 0; i < this.list.length; i++) {\n        let item = this.list[i];\n        let params = {\n          domain: item.domain,\n          host_ip: item.host_ip,\n        };\n        domainStatus(params).then((response) => {\n          item.domain_status = response.data.isRunning;\n        });\n        this.list[i] = item;\n      }\n    },\n    //查询操作,从第一页开始\n    handleFilter() {\n      this.listQuery.page_no = 1;\n      this.getList();\n    },\n    // 关闭域\n    shutdownDomain(row) {\n      let params = { domain: row.domain, host_ip: row.host_ip };\n      domainDown(params).then((response) => {\n        console.log(response);\n        if (response.data.errmsg == \"\") {\n          this.$notify({\n            title: \"Success\",\n            message: \"Shutdown \" + params.domain,\n            type: \"success\",\n            duration: 5000,\n          });\n        } else {\n          this.$notify({\n            title: \"Failed\",\n            message: response.data.errmsg,\n            type: \"warning\",\n            duration: 5000,\n          });\n        }\n      });\n    },\n    // 开启域\n    startDomain(row) {\n      let params = { domain: row.domain, host_ip: row.host_ip };\n      domainStart(params).then((response) => {\n        console.log(response);\n        if (response.data.errmsg == \"\") {\n          this.$notify({\n            title: \"Success\",\n            message: \"Start \" + params.domain,\n            type: \"success\",\n            duration: 5000,\n          });\n        } else {\n          this.$notify({\n            title: \"Failed\",\n            message: response.data.errmsg,\n            type: \"warning\",\n            duration: 5000,\n          });\n        }\n      });\n    },\n    // 恢复域\n    recoverDomain(row) {\n      let params = { domain: row.domain, host_ip: row.host_ip };\n      domainRecover(params).then((response) => {\n        console.log(response);\n        if (response.data.errmsg == \"\") {\n          this.$notify({\n            title: \"Success\",\n            message: \"Recover \" + params.domain,\n            type: \"success\",\n            duration: 5000,\n          });\n        } else {\n          this.$notify({\n            title: \"Failed\",\n            message: response.data.errmsg,\n            type: \"warning\",\n            duration: 5000,\n          });\n        }\n      });\n    },\n    //删除表记录\n    handleDelete() {},\n  },\n  destroyed() {\n    clearInterval(this.timer);\n  },\n};\n</script>\n\n<style scoped>\n.mixin-components-container {\n  background-color: #f0f2f5;\n  padding: 30px;\n  min-height: calc(100vh - 84px);\n}\n.component-item {\n  min-height: 100px;\n}\n.operation-btn {\n  padding-inline-end: 10px;\n}\n</style>\n"],"sourceRoot":"src/views/nodes"}]}