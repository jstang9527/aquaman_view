{"remainingRequest":"/home/views/opentest_view/node_modules/babel-loader/lib/index.js!/home/views/opentest_view/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/views/opentest_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/views/opentest_view/src/views/permission/role.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/views/opentest_view/src/views/permission/role.vue","mtime":1596199104000},{"path":"/home/views/opentest_view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/views/opentest_view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/views/opentest_view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/views/opentest_view/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvdmlld3Mvb3BlbnRlc3Rfdmlldy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL2hvbWUvdmlld3Mvb3BlbnRlc3Rfdmlldy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIgZnJvbSAiL2hvbWUvdmlld3Mvb3BlbnRlc3Rfdmlldy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3ZpZXdzL29wZW50ZXN0X3ZpZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgcGF0aCBmcm9tICdwYXRoJzsKaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQC91dGlscyc7CmltcG9ydCB7IGdldFJvdXRlcyBhcyBfZ2V0Um91dGVzLCBnZXRSb2xlcyBhcyBfZ2V0Um9sZXMsIGFkZFJvbGUsIGRlbGV0ZVJvbGUsIHVwZGF0ZVJvbGUgfSBmcm9tICdAL2FwaS9yb2xlJzsKdmFyIGRlZmF1bHRSb2xlID0gewogIGtleTogJycsCiAgbmFtZTogJycsCiAgZGVzY3JpcHRpb246ICcnLAogIHJvdXRlczogW10KfTsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByb2xlOiBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0Um9sZSksCiAgICAgIHJvdXRlczogW10sCiAgICAgIHJvbGVzTGlzdDogW10sCiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICBkaWFsb2dUeXBlOiAnbmV3JywKICAgICAgY2hlY2tTdHJpY3RseTogZmFsc2UsCiAgICAgIGRlZmF1bHRQcm9wczogewogICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nLAogICAgICAgIGxhYmVsOiAndGl0bGUnCiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgcm91dGVzRGF0YTogZnVuY3Rpb24gcm91dGVzRGF0YSgpIHsKICAgICAgcmV0dXJuIHRoaXMucm91dGVzOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8vIE1vY2s6IGdldCBhbGwgcm91dGVzIGFuZCByb2xlcyBsaXN0IGZyb20gc2VydmVyCiAgICB0aGlzLmdldFJvdXRlcygpOwogICAgdGhpcy5nZXRSb2xlcygpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0Um91dGVzOiBmdW5jdGlvbiBnZXRSb3V0ZXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX2dldFJvdXRlcygpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMuc2VydmljZVJvdXRlcyA9IHJlcy5kYXRhOwogICAgICAgICAgICAgICAgX3RoaXMucm91dGVzID0gX3RoaXMuZ2VuZXJhdGVSb3V0ZXMocmVzLmRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0Um9sZXM6IGZ1bmN0aW9uIGdldFJvbGVzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciByZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfZ2V0Um9sZXMoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpczIucm9sZXNMaXN0ID0gcmVzLmRhdGE7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIFJlc2hhcGUgdGhlIHJvdXRlcyBzdHJ1Y3R1cmUgc28gdGhhdCBpdCBsb29rcyB0aGUgc2FtZSBhcyB0aGUgc2lkZWJhcgogICAgZ2VuZXJhdGVSb3V0ZXM6IGZ1bmN0aW9uIGdlbmVyYXRlUm91dGVzKHJvdXRlcykgewogICAgICB2YXIgYmFzZVBhdGggPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICcvJzsKICAgICAgdmFyIHJlcyA9IFtdOwoKICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHJvdXRlcyksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciByb3V0ZSA9IF9zdGVwLnZhbHVlOwoKICAgICAgICAgIC8vIHNraXAgc29tZSByb3V0ZQogICAgICAgICAgaWYgKHJvdXRlLmhpZGRlbikgewogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgIH0KCiAgICAgICAgICB2YXIgb25seU9uZVNob3dpbmdDaGlsZCA9IHRoaXMub25seU9uZVNob3dpbmdDaGlsZChyb3V0ZS5jaGlsZHJlbiwgcm91dGUpOwoKICAgICAgICAgIGlmIChyb3V0ZS5jaGlsZHJlbiAmJiBvbmx5T25lU2hvd2luZ0NoaWxkICYmICFyb3V0ZS5hbHdheXNTaG93KSB7CiAgICAgICAgICAgIHJvdXRlID0gb25seU9uZVNob3dpbmdDaGlsZDsKICAgICAgICAgIH0KCiAgICAgICAgICB2YXIgZGF0YSA9IHsKICAgICAgICAgICAgcGF0aDogcGF0aC5yZXNvbHZlKGJhc2VQYXRoLCByb3V0ZS5wYXRoKSwKICAgICAgICAgICAgdGl0bGU6IHJvdXRlLm1ldGEgJiYgcm91dGUubWV0YS50aXRsZQogICAgICAgICAgfTsgLy8gcmVjdXJzaXZlIGNoaWxkIHJvdXRlcwoKICAgICAgICAgIGlmIChyb3V0ZS5jaGlsZHJlbikgewogICAgICAgICAgICBkYXRhLmNoaWxkcmVuID0gdGhpcy5nZW5lcmF0ZVJvdXRlcyhyb3V0ZS5jaGlsZHJlbiwgZGF0YS5wYXRoKTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXMucHVzaChkYXRhKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHJlczsKICAgIH0sCiAgICBnZW5lcmF0ZUFycjogZnVuY3Rpb24gZ2VuZXJhdGVBcnIocm91dGVzKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIGRhdGEgPSBbXTsKICAgICAgcm91dGVzLmZvckVhY2goZnVuY3Rpb24gKHJvdXRlKSB7CiAgICAgICAgZGF0YS5wdXNoKHJvdXRlKTsKCiAgICAgICAgaWYgKHJvdXRlLmNoaWxkcmVuKSB7CiAgICAgICAgICB2YXIgdGVtcCA9IF90aGlzMy5nZW5lcmF0ZUFycihyb3V0ZS5jaGlsZHJlbik7CgogICAgICAgICAgaWYgKHRlbXAubGVuZ3RoID4gMCkgewogICAgICAgICAgICBkYXRhID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShkYXRhKSwgX3RvQ29uc3VtYWJsZUFycmF5KHRlbXApKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXR1cm4gZGF0YTsKICAgIH0sCiAgICBoYW5kbGVBZGRSb2xlOiBmdW5jdGlvbiBoYW5kbGVBZGRSb2xlKCkgewogICAgICB0aGlzLnJvbGUgPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0Um9sZSk7CgogICAgICBpZiAodGhpcy4kcmVmcy50cmVlKSB7CiAgICAgICAgdGhpcy4kcmVmcy50cmVlLnNldENoZWNrZWROb2RlcyhbXSk7CiAgICAgIH0KCiAgICAgIHRoaXMuZGlhbG9nVHlwZSA9ICduZXcnOwogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgfSwKICAgIGhhbmRsZUVkaXQ6IGZ1bmN0aW9uIGhhbmRsZUVkaXQoc2NvcGUpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB0aGlzLmRpYWxvZ1R5cGUgPSAnZWRpdCc7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICAgIHRoaXMuY2hlY2tTdHJpY3RseSA9IHRydWU7CiAgICAgIHRoaXMucm9sZSA9IGRlZXBDbG9uZShzY29wZS5yb3cpOwogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIHJvdXRlcyA9IF90aGlzNC5nZW5lcmF0ZVJvdXRlcyhfdGhpczQucm9sZS5yb3V0ZXMpOwoKICAgICAgICBfdGhpczQuJHJlZnMudHJlZS5zZXRDaGVja2VkTm9kZXMoX3RoaXM0LmdlbmVyYXRlQXJyKHJvdXRlcykpOyAvLyBzZXQgY2hlY2tlZCBzdGF0ZSBvZiBhIG5vZGUgbm90IGFmZmVjdHMgaXRzIGZhdGhlciBhbmQgY2hpbGQgbm9kZXMKCgogICAgICAgIF90aGlzNC5jaGVja1N0cmljdGx5ID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZURlbGV0ZTogZnVuY3Rpb24gaGFuZGxlRGVsZXRlKF9yZWYpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICB2YXIgJGluZGV4ID0gX3JlZi4kaW5kZXgsCiAgICAgICAgICByb3cgPSBfcmVmLnJvdzsKICAgICAgdGhpcy4kY29uZmlybSgnQ29uZmlybSB0byByZW1vdmUgdGhlIHJvbGU/JywgJ1dhcm5pbmcnLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICdDb25maXJtJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAnQ2FuY2VsJywKICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgfSkudGhlbiggLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBkZWxldGVSb2xlKHJvdy5rZXkpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfdGhpczUucm9sZXNMaXN0LnNwbGljZSgkaW5kZXgsIDEpOwoKICAgICAgICAgICAgICAgIF90aGlzNS4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ0RlbGV0ZSBzdWNjZWQhJwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2VuZXJhdGVUcmVlOiBmdW5jdGlvbiBnZW5lcmF0ZVRyZWUocm91dGVzKSB7CiAgICAgIHZhciBiYXNlUGF0aCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJy8nOwogICAgICB2YXIgY2hlY2tlZEtleXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZDsKICAgICAgdmFyIHJlcyA9IFtdOwoKICAgICAgdmFyIF9pdGVyYXRvcjIgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihyb3V0ZXMpLAogICAgICAgICAgX3N0ZXAyOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykgewogICAgICAgICAgdmFyIHJvdXRlID0gX3N0ZXAyLnZhbHVlOwogICAgICAgICAgdmFyIHJvdXRlUGF0aCA9IHBhdGgucmVzb2x2ZShiYXNlUGF0aCwgcm91dGUucGF0aCk7IC8vIHJlY3Vyc2l2ZSBjaGlsZCByb3V0ZXMKCiAgICAgICAgICBpZiAocm91dGUuY2hpbGRyZW4pIHsKICAgICAgICAgICAgcm91dGUuY2hpbGRyZW4gPSB0aGlzLmdlbmVyYXRlVHJlZShyb3V0ZS5jaGlsZHJlbiwgcm91dGVQYXRoLCBjaGVja2VkS2V5cyk7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKGNoZWNrZWRLZXlzLmluY2x1ZGVzKHJvdXRlUGF0aCkgfHwgcm91dGUuY2hpbGRyZW4gJiYgcm91dGUuY2hpbGRyZW4ubGVuZ3RoID49IDEpIHsKICAgICAgICAgICAgcmVzLnB1c2gocm91dGUpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yMi5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yMi5mKCk7CiAgICAgIH0KCiAgICAgIHJldHVybiByZXM7CiAgICB9LAogICAgY29uZmlybVJvbGU6IGZ1bmN0aW9uIGNvbmZpcm1Sb2xlKCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciBpc0VkaXQsIGNoZWNrZWRLZXlzLCBpbmRleCwgX3lpZWxkJGFkZFJvbGUsIGRhdGEsIF90aGlzNiRyb2xlLCBkZXNjcmlwdGlvbiwga2V5LCBuYW1lOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaXNFZGl0ID0gX3RoaXM2LmRpYWxvZ1R5cGUgPT09ICdlZGl0JzsKICAgICAgICAgICAgICAgIGNoZWNrZWRLZXlzID0gX3RoaXM2LiRyZWZzLnRyZWUuZ2V0Q2hlY2tlZEtleXMoKTsKICAgICAgICAgICAgICAgIF90aGlzNi5yb2xlLnJvdXRlcyA9IF90aGlzNi5nZW5lcmF0ZVRyZWUoZGVlcENsb25lKF90aGlzNi5zZXJ2aWNlUm91dGVzKSwgJy8nLCBjaGVja2VkS2V5cyk7CgogICAgICAgICAgICAgICAgaWYgKCFpc0VkaXQpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxNjsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIHVwZGF0ZVJvbGUoX3RoaXM2LnJvbGUua2V5LCBfdGhpczYucm9sZSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIGluZGV4ID0gMDsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgaWYgKCEoaW5kZXggPCBfdGhpczYucm9sZXNMaXN0Lmxlbmd0aCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgaWYgKCEoX3RoaXM2LnJvbGVzTGlzdFtpbmRleF0ua2V5ID09PSBfdGhpczYucm9sZS5rZXkpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF90aGlzNi5yb2xlc0xpc3Quc3BsaWNlKGluZGV4LCAxLCBPYmplY3QuYXNzaWduKHt9LCBfdGhpczYucm9sZSkpOwoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJicmVhayIsIDE0KTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIGluZGV4Kys7CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMjI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTg7CiAgICAgICAgICAgICAgICByZXR1cm4gYWRkUm9sZShfdGhpczYucm9sZSk7CgogICAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgICBfeWllbGQkYWRkUm9sZSA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRhZGRSb2xlLmRhdGE7CiAgICAgICAgICAgICAgICBfdGhpczYucm9sZS5rZXkgPSBkYXRhLmtleTsKCiAgICAgICAgICAgICAgICBfdGhpczYucm9sZXNMaXN0LnB1c2goX3RoaXM2LnJvbGUpOwoKICAgICAgICAgICAgICBjYXNlIDIyOgogICAgICAgICAgICAgICAgX3RoaXM2JHJvbGUgPSBfdGhpczYucm9sZSwgZGVzY3JpcHRpb24gPSBfdGhpczYkcm9sZS5kZXNjcmlwdGlvbiwga2V5ID0gX3RoaXM2JHJvbGUua2V5LCBuYW1lID0gX3RoaXM2JHJvbGUubmFtZTsKICAgICAgICAgICAgICAgIF90aGlzNi5kaWFsb2dWaXNpYmxlID0gZmFsc2U7CgogICAgICAgICAgICAgICAgX3RoaXM2LiRub3RpZnkoewogICAgICAgICAgICAgICAgICB0aXRsZTogJ1N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICBkYW5nZXJvdXNseVVzZUhUTUxTdHJpbmc6IHRydWUsCiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICJcbiAgICAgICAgICAgIDxkaXY+Um9sZSBLZXk6ICIuY29uY2F0KGtleSwgIjwvZGl2PlxuICAgICAgICAgICAgPGRpdj5Sb2xlIE5hbWU6ICIpLmNvbmNhdChuYW1lLCAiPC9kaXY+XG4gICAgICAgICAgICA8ZGl2PkRlc2NyaXB0aW9uOiAiKS5jb25jYXQoZGVzY3JpcHRpb24sICI8L2Rpdj5cbiAgICAgICAgICAiKSwKICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIHJlZmVyZW5jZTogc3JjL3ZpZXcvbGF5b3V0L2NvbXBvbmVudHMvU2lkZWJhci9TaWRlYmFySXRlbS52dWUKICAgIG9ubHlPbmVTaG93aW5nQ2hpbGQ6IGZ1bmN0aW9uIG9ubHlPbmVTaG93aW5nQ2hpbGQoKSB7CiAgICAgIHZhciBjaGlsZHJlbiA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogW107CiAgICAgIHZhciBwYXJlbnQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDsKICAgICAgdmFyIG9ubHlPbmVDaGlsZCA9IG51bGw7CiAgICAgIHZhciBzaG93aW5nQ2hpbGRyZW4gPSBjaGlsZHJlbi5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gIWl0ZW0uaGlkZGVuOwogICAgICB9KTsgLy8gV2hlbiB0aGVyZSBpcyBvbmx5IG9uZSBjaGlsZCByb3V0ZSwgdGhlIGNoaWxkIHJvdXRlIGlzIGRpc3BsYXllZCBieSBkZWZhdWx0CgogICAgICBpZiAoc2hvd2luZ0NoaWxkcmVuLmxlbmd0aCA9PT0gMSkgewogICAgICAgIG9ubHlPbmVDaGlsZCA9IHNob3dpbmdDaGlsZHJlblswXTsKICAgICAgICBvbmx5T25lQ2hpbGQucGF0aCA9IHBhdGgucmVzb2x2ZShwYXJlbnQucGF0aCwgb25seU9uZUNoaWxkLnBhdGgpOwogICAgICAgIHJldHVybiBvbmx5T25lQ2hpbGQ7CiAgICAgIH0gLy8gU2hvdyBwYXJlbnQgaWYgdGhlcmUgYXJlIG5vIGNoaWxkIHJvdXRlIHRvIGRpc3BsYXkKCgogICAgICBpZiAoc2hvd2luZ0NoaWxkcmVuLmxlbmd0aCA9PT0gMCkgewogICAgICAgIG9ubHlPbmVDaGlsZCA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcGFyZW50KSwge30sIHsKICAgICAgICAgIHBhdGg6ICcnLAogICAgICAgICAgbm9TaG93aW5nQ2hpbGRyZW46IHRydWUKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gb25seU9uZUNoaWxkOwogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["role.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-button type=\"primary\" @click=\"handleAddRole\">New Role</el-button>\n\n    <el-table :data=\"rolesList\" style=\"width: 100%;margin-top:30px;\" border>\n      <el-table-column align=\"center\" label=\"Role Key\" width=\"220\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.key }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"Role Name\" width=\"220\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.name }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"header-center\" label=\"Description\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.description }}\n        </template>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"Operations\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" size=\"small\" @click=\"handleEdit(scope)\">Edit</el-button>\n          <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope)\">Delete</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-dialog :visible.sync=\"dialogVisible\" :title=\"dialogType==='edit'?'Edit Role':'New Role'\">\n      <el-form :model=\"role\" label-width=\"80px\" label-position=\"left\">\n        <el-form-item label=\"Name\">\n          <el-input v-model=\"role.name\" placeholder=\"Role Name\" />\n        </el-form-item>\n        <el-form-item label=\"Desc\">\n          <el-input\n            v-model=\"role.description\"\n            :autosize=\"{ minRows: 2, maxRows: 4}\"\n            type=\"textarea\"\n            placeholder=\"Role Description\"\n          />\n        </el-form-item>\n        <el-form-item label=\"Menus\">\n          <el-tree\n            ref=\"tree\"\n            :check-strictly=\"checkStrictly\"\n            :data=\"routesData\"\n            :props=\"defaultProps\"\n            show-checkbox\n            node-key=\"path\"\n            class=\"permission-tree\"\n          />\n        </el-form-item>\n      </el-form>\n      <div style=\"text-align:right;\">\n        <el-button type=\"danger\" @click=\"dialogVisible=false\">Cancel</el-button>\n        <el-button type=\"primary\" @click=\"confirmRole\">Confirm</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport path from 'path'\nimport { deepClone } from '@/utils'\nimport { getRoutes, getRoles, addRole, deleteRole, updateRole } from '@/api/role'\n\nconst defaultRole = {\n  key: '',\n  name: '',\n  description: '',\n  routes: []\n}\n\nexport default {\n  data() {\n    return {\n      role: Object.assign({}, defaultRole),\n      routes: [],\n      rolesList: [],\n      dialogVisible: false,\n      dialogType: 'new',\n      checkStrictly: false,\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      }\n    }\n  },\n  computed: {\n    routesData() {\n      return this.routes\n    }\n  },\n  created() {\n    // Mock: get all routes and roles list from server\n    this.getRoutes()\n    this.getRoles()\n  },\n  methods: {\n    async getRoutes() {\n      const res = await getRoutes()\n      this.serviceRoutes = res.data\n      this.routes = this.generateRoutes(res.data)\n    },\n    async getRoles() {\n      const res = await getRoles()\n      this.rolesList = res.data\n    },\n\n    // Reshape the routes structure so that it looks the same as the sidebar\n    generateRoutes(routes, basePath = '/') {\n      const res = []\n\n      for (let route of routes) {\n        // skip some route\n        if (route.hidden) { continue }\n\n        const onlyOneShowingChild = this.onlyOneShowingChild(route.children, route)\n\n        if (route.children && onlyOneShowingChild && !route.alwaysShow) {\n          route = onlyOneShowingChild\n        }\n\n        const data = {\n          path: path.resolve(basePath, route.path),\n          title: route.meta && route.meta.title\n\n        }\n\n        // recursive child routes\n        if (route.children) {\n          data.children = this.generateRoutes(route.children, data.path)\n        }\n        res.push(data)\n      }\n      return res\n    },\n    generateArr(routes) {\n      let data = []\n      routes.forEach(route => {\n        data.push(route)\n        if (route.children) {\n          const temp = this.generateArr(route.children)\n          if (temp.length > 0) {\n            data = [...data, ...temp]\n          }\n        }\n      })\n      return data\n    },\n    handleAddRole() {\n      this.role = Object.assign({}, defaultRole)\n      if (this.$refs.tree) {\n        this.$refs.tree.setCheckedNodes([])\n      }\n      this.dialogType = 'new'\n      this.dialogVisible = true\n    },\n    handleEdit(scope) {\n      this.dialogType = 'edit'\n      this.dialogVisible = true\n      this.checkStrictly = true\n      this.role = deepClone(scope.row)\n      this.$nextTick(() => {\n        const routes = this.generateRoutes(this.role.routes)\n        this.$refs.tree.setCheckedNodes(this.generateArr(routes))\n        // set checked state of a node not affects its father and child nodes\n        this.checkStrictly = false\n      })\n    },\n    handleDelete({ $index, row }) {\n      this.$confirm('Confirm to remove the role?', 'Warning', {\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      })\n        .then(async() => {\n          await deleteRole(row.key)\n          this.rolesList.splice($index, 1)\n          this.$message({\n            type: 'success',\n            message: 'Delete succed!'\n          })\n        })\n        .catch(err => { console.error(err) })\n    },\n    generateTree(routes, basePath = '/', checkedKeys) {\n      const res = []\n\n      for (const route of routes) {\n        const routePath = path.resolve(basePath, route.path)\n\n        // recursive child routes\n        if (route.children) {\n          route.children = this.generateTree(route.children, routePath, checkedKeys)\n        }\n\n        if (checkedKeys.includes(routePath) || (route.children && route.children.length >= 1)) {\n          res.push(route)\n        }\n      }\n      return res\n    },\n    async confirmRole() {\n      const isEdit = this.dialogType === 'edit'\n\n      const checkedKeys = this.$refs.tree.getCheckedKeys()\n      this.role.routes = this.generateTree(deepClone(this.serviceRoutes), '/', checkedKeys)\n\n      if (isEdit) {\n        await updateRole(this.role.key, this.role)\n        for (let index = 0; index < this.rolesList.length; index++) {\n          if (this.rolesList[index].key === this.role.key) {\n            this.rolesList.splice(index, 1, Object.assign({}, this.role))\n            break\n          }\n        }\n      } else {\n        const { data } = await addRole(this.role)\n        this.role.key = data.key\n        this.rolesList.push(this.role)\n      }\n\n      const { description, key, name } = this.role\n      this.dialogVisible = false\n      this.$notify({\n        title: 'Success',\n        dangerouslyUseHTMLString: true,\n        message: `\n            <div>Role Key: ${key}</div>\n            <div>Role Name: ${name}</div>\n            <div>Description: ${description}</div>\n          `,\n        type: 'success'\n      })\n    },\n    // reference: src/view/layout/components/Sidebar/SidebarItem.vue\n    onlyOneShowingChild(children = [], parent) {\n      let onlyOneChild = null\n      const showingChildren = children.filter(item => !item.hidden)\n\n      // When there is only one child route, the child route is displayed by default\n      if (showingChildren.length === 1) {\n        onlyOneChild = showingChildren[0]\n        onlyOneChild.path = path.resolve(parent.path, onlyOneChild.path)\n        return onlyOneChild\n      }\n\n      // Show parent if there are no child route to display\n      if (showingChildren.length === 0) {\n        onlyOneChild = { ... parent, path: '', noShowingChildren: true }\n        return onlyOneChild\n      }\n\n      return false\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.app-container {\n  .roles-table {\n    margin-top: 30px;\n  }\n  .permission-tree {\n    margin-bottom: 30px;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/permission"}]}