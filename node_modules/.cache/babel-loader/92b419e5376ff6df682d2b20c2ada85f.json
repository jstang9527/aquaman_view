{"remainingRequest":"/home/views/aquaman_view/node_modules/babel-loader/lib/index.js!/home/views/aquaman_view/node_modules/eslint-loader/index.js??ref--13-0!/home/views/aquaman_view/src/utils/request.js","dependencies":[{"path":"/home/views/aquaman_view/src/utils/request.js","mtime":1602238400503},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/babel-loader/lib/index.js","mtime":1601261365222},{"path":"/home/views/aquaman_view/node_modules/eslint-loader/index.js","mtime":1601261368693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJzsKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUnOwppbXBvcnQgeyBnZXRUb2tlbiB9IGZyb20gJ0AvdXRpbHMvYXV0aCc7IC8vIGNyZWF0ZSBhbiBheGlvcyBpbnN0YW5jZQoKdmFyIHNlcnZpY2UgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9BUEksCiAgLy8gdXJsID0gYmFzZSB1cmwgKyByZXF1ZXN0IHVybAogIC8vIHdpdGhDcmVkZW50aWFsczogdHJ1ZSwgLy8gc2VuZCBjb29raWVzIHdoZW4gY3Jvc3MtZG9tYWluIHJlcXVlc3RzCiAgdGltZW91dDogNjAwMDAgLy8gcmVxdWVzdCB0aW1lb3V0Cgp9KTsgLy8gcmVxdWVzdCBpbnRlcmNlcHRvcgoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIC8vIGRvIHNvbWV0aGluZyBiZWZvcmUgcmVxdWVzdCBpcyBzZW50CiAgaWYgKHN0b3JlLmdldHRlcnMudG9rZW4pIHsKICAgIC8vIGxldCBlYWNoIHJlcXVlc3QgY2FycnkgdG9rZW4KICAgIC8vIFsnWC1Ub2tlbiddIGlzIGEgY3VzdG9tIGhlYWRlcnMga2V5CiAgICAvLyBwbGVhc2UgbW9kaWZ5IGl0IGFjY29yZGluZyB0byB0aGUgYWN0dWFsIHNpdHVhdGlvbgogICAgY29uZmlnLmhlYWRlcnNbJ1gtVG9rZW4nXSA9IGdldFRva2VuKCk7CiAgfQoKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAvLyBkbyBzb21ldGhpbmcgd2l0aCByZXF1ZXN0IGVycm9yCiAgY29uc29sZS5sb2coZXJyb3IpOyAvLyBmb3IgZGVidWcKCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7IC8vIHJlc3BvbnNlIGludGVyY2VwdG9yCgpzZXJ2aWNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoCi8qKgogKiBJZiB5b3Ugd2FudCB0byBnZXQgaHR0cCBpbmZvcm1hdGlvbiBzdWNoIGFzIGhlYWRlcnMgb3Igc3RhdHVzCiAqIFBsZWFzZSByZXR1cm4gIHJlc3BvbnNlID0+IHJlc3BvbnNlCiovCgovKioKICogRGV0ZXJtaW5lIHRoZSByZXF1ZXN0IHN0YXR1cyBieSBjdXN0b20gY29kZQogKiBIZXJlIGlzIGp1c3QgYW4gZXhhbXBsZQogKiBZb3UgY2FuIGFsc28ganVkZ2UgdGhlIHN0YXR1cyBieSBIVFRQIFN0YXR1cyBDb2RlCiAqLwpmdW5jdGlvbiAocmVzcG9uc2UpIHsKICB2YXIgcmVzID0gcmVzcG9uc2UuZGF0YTsgLy8gaWYgdGhlIGN1c3RvbSBjb2RlIGlzIG5vdCAwLCBpdCBpcyBqdWRnZWQgYXMgYW4gZXJyb3IuCgogIGlmIChyZXMuZXJybm8gIT09IDApIHsKICAgIE1lc3NhZ2UoewogICAgICBtZXNzYWdlOiByZXMuZXJybXNnIHx8ICdFcnJvcicsCiAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgIGR1cmF0aW9uOiA1ICogMTAwMAogICAgfSk7IC8vIDUwMDA4OiBJbGxlZ2FsIHRva2VuOyA1MDAxMjogT3RoZXIgY2xpZW50cyBsb2dnZWQgaW47IDUwMDE0OiBUb2tlbiBleHBpcmVkOwogICAgLy8gaWYgKHJlcy5lcnJubyA9PT0gNTAwMDggfHwgcmVzLmVycm5vID09PSA1MDAxMiB8fCByZXMuZXJybm8gPT09IDUwMDE0KSB7CiAgICAvLyAgIC8vIHRvIHJlLWxvZ2luCiAgICAvLyAgIE1lc3NhZ2VCb3guY29uZmlybSgnWW91IGhhdmUgYmVlbiBsb2dnZWQgb3V0LCB5b3UgY2FuIGNhbmNlbCB0byBzdGF5IG9uIHRoaXMgcGFnZSwgb3IgbG9nIGluIGFnYWluJywgJ0NvbmZpcm0gbG9nb3V0JywgewogICAgLy8gICAgIGNvbmZpcm1CdXR0b25UZXh0OiAnUmUtTG9naW4nLAogICAgLy8gICAgIGNhbmNlbEJ1dHRvblRleHQ6ICdDYW5jZWwnLAogICAgLy8gICAgIHR5cGU6ICd3YXJuaW5nJwogICAgLy8gICB9KS50aGVuKCgpID0+IHsKICAgIC8vICAgICBzdG9yZS5kaXNwYXRjaCgndXNlci9yZXNldFRva2VuJykudGhlbigoKSA9PiB7CiAgICAvLyAgICAgICBsb2NhdGlvbi5yZWxvYWQoKQogICAgLy8gICAgIH0pCiAgICAvLyAgIH0pCiAgICAvLyB9CgogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihyZXMuZXJybXNnIHx8ICdFcnJvcicpKTsKICB9IGVsc2UgewogICAgcmV0dXJuIHJlczsKICB9Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIGNvbnNvbGUubG9nKCdlcnInICsgZXJyb3IpOyAvLyBmb3IgZGVidWcKCiAgTWVzc2FnZSh7CiAgICBtZXNzYWdlOiBlcnJvci5lcnJtc2csCiAgICB0eXBlOiAnZXJyb3InLAogICAgZHVyYXRpb246IDUgKiAxMDAwCiAgfSk7CiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IHNlcnZpY2U7"},{"version":3,"sources":["/home/views/aquaman_view/src/utils/request.js"],"names":["axios","Message","store","getToken","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","getters","token","headers","error","console","log","Promise","reject","response","res","data","errno","message","errmsg","type","duration","Error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CAEA;;AACA,IAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADM;AACY;AACvC;AACAC,EAAAA,OAAO,EAAE,KAHkB,CAGZ;;AAHY,CAAb,CAAhB,C,CAMA;;AACAN,OAAO,CAACO,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAAAC,MAAM,EAAI;AACR;AAEA,MAAIZ,KAAK,CAACa,OAAN,CAAcC,KAAlB,EAAyB;AACvB;AACA;AACA;AACAF,IAAAA,MAAM,CAACG,OAAP,CAAe,SAAf,IAA4Bd,QAAQ,EAApC;AACD;;AACD,SAAOW,MAAP;AACD,CAXH,EAYE,UAAAI,KAAK,EAAI;AACP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFO,CAEY;;AACnB,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAhBH,E,CAmBA;;AACAd,OAAO,CAACO,YAAR,CAAqBY,QAArB,CAA8BV,GAA9B;AACE;;;;;AAKA;;;;;AAKA,UAAAU,QAAQ,EAAI;AACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB,CADU,CAGV;;AACA,MAAID,GAAG,CAACE,KAAJ,KAAc,CAAlB,EAAqB;AACnBzB,IAAAA,OAAO,CAAC;AACN0B,MAAAA,OAAO,EAAEH,GAAG,CAACI,MAAJ,IAAc,OADjB;AAENC,MAAAA,IAAI,EAAE,OAFA;AAGNC,MAAAA,QAAQ,EAAE,IAAI;AAHR,KAAD,CAAP,CADmB,CAOnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAOT,OAAO,CAACC,MAAR,CAAe,IAAIS,KAAJ,CAAUP,GAAG,CAACI,MAAJ,IAAc,OAAxB,CAAf,CAAP;AACD,GArBD,MAqBO;AACL,WAAOJ,GAAP;AACD;AACF,CAvCH,EAwCE,UAAAN,KAAK,EAAI;AACPC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQF,KAApB,EADO,CACoB;;AAC3BjB,EAAAA,OAAO,CAAC;AACN0B,IAAAA,OAAO,EAAET,KAAK,CAACU,MADT;AAENC,IAAAA,IAAI,EAAE,OAFA;AAGNC,IAAAA,QAAQ,EAAE,IAAI;AAHR,GAAD,CAAP;AAKA,SAAOT,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAhDH;AAmDA,eAAed,OAAf","sourcesContent":["import axios from 'axios'\nimport { Message } from 'element-ui'\nimport store from '@/store'\nimport { getToken } from '@/utils/auth'\n\n// create an axios instance\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API, // url = base url + request url\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 60000 // request timeout\n})\n\n// request interceptor\nservice.interceptors.request.use(\n  config => {\n    // do something before request is sent\n\n    if (store.getters.token) {\n      // let each request carry token\n      // ['X-Token'] is a custom headers key\n      // please modify it according to the actual situation\n      config.headers['X-Token'] = getToken()\n    }\n    return config\n  },\n  error => {\n    // do something with request error\n    console.log(error) // for debug\n    return Promise.reject(error)\n  }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n  /**\n   * If you want to get http information such as headers or status\n   * Please return  response => response\n  */\n\n  /**\n   * Determine the request status by custom code\n   * Here is just an example\n   * You can also judge the status by HTTP Status Code\n   */\n  response => {\n    const res = response.data\n\n    // if the custom code is not 0, it is judged as an error.\n    if (res.errno !== 0) {\n      Message({\n        message: res.errmsg || 'Error',\n        type: 'error',\n        duration: 5 * 1000\n      })\n\n      // 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;\n      // if (res.errno === 50008 || res.errno === 50012 || res.errno === 50014) {\n      //   // to re-login\n      //   MessageBox.confirm('You have been logged out, you can cancel to stay on this page, or log in again', 'Confirm logout', {\n      //     confirmButtonText: 'Re-Login',\n      //     cancelButtonText: 'Cancel',\n      //     type: 'warning'\n      //   }).then(() => {\n      //     store.dispatch('user/resetToken').then(() => {\n      //       location.reload()\n      //     })\n      //   })\n      // }\n      return Promise.reject(new Error(res.errmsg || 'Error'))\n    } else {\n      return res\n    }\n  },\n  error => {\n    console.log('err' + error) // for debug\n    Message({\n      message: error.errmsg,\n      type: 'error',\n      duration: 5 * 1000\n    })\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n"]}]}