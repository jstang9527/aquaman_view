{"remainingRequest":"/home/views/aquaman_view/node_modules/babel-loader/lib/index.js!/home/views/aquaman_view/node_modules/eslint-loader/index.js??ref--13-0!/home/views/aquaman_view/src/api/auth_tester.js","dependencies":[{"path":"/home/views/aquaman_view/src/api/auth_tester.js","mtime":1605076552743},{"path":"/home/views/aquaman_view/node_modules/cache-loader/dist/cjs.js","mtime":1601261325203},{"path":"/home/views/aquaman_view/node_modules/babel-loader/lib/index.js","mtime":1601261365222},{"path":"/home/views/aquaman_view/node_modules/eslint-loader/index.js","mtime":1601261368693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHJlcXVlc3QgZnJvbSAnQC91dGlscy9yZXF1ZXN0JzsKZXhwb3J0IGZ1bmN0aW9uIERldGVjdExpc3QocXVlcnkpIHsKICAvL+ajgOWHuuWIl+ihqAogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9hdXRoX3Rlc3Rlci9kZXRlY3QnLAogICAgbWV0aG9kOiAnZ2V0JywKICAgIHBhcmFtczogcXVlcnkKICB9KTsKfQpleHBvcnQgZnVuY3Rpb24gVGFza0xpc3QocXVlcnkpIHsKICAvL+S7u+WKoeWIl+ihqAogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9hdXRoX3Rlc3Rlci90YXNrcycsCiAgICBtZXRob2Q6ICdnZXQnLAogICAgcGFyYW1zOiBxdWVyeQogIH0pOwp9CmV4cG9ydCBmdW5jdGlvbiBDb25maWdEYXRhKCkgewogIC8v6I635Y+W6K6k6K+B5qOA5rWL6YWN572u5L+h5oGvCiAgcmV0dXJuIHJlcXVlc3QoewogICAgdXJsOiAnL2F1dGhfdGVzdGVyL2NvbmZpZycsCiAgICBtZXRob2Q6ICdnZXQnCiAgfSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIEFkZFRhc2soZGF0YSkgewogIC8v5Yib5bu65Lu75YqhCiAgcmV0dXJuIHJlcXVlc3QoewogICAgdXJsOiAnL2F1dGhfdGVzdGVyL3Rhc2snLAogICAgbWV0aG9kOiAncG9zdCcsCiAgICBkYXRhOiBkYXRhCiAgfSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIFRhc2tEZXRhaWwocXVlcnkpIHsKICAvL+S7u+WKoeivpuaDhQogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9hdXRoX3Rlc3Rlci90YXNrJywKICAgIG1ldGhvZDogJ2dldCcsCiAgICBwYXJhbXM6IHF1ZXJ5CiAgfSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIERlbFRhc2socXVlcnkpIHsKICAvL+WIoOmZpOS7u+WKoQogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9hdXRoX3Rlc3Rlci90YXNrJywKICAgIG1ldGhvZDogJ2RlbGV0ZScsCiAgICBwYXJhbXM6IHF1ZXJ5CiAgfSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIFJlc2NhblRhc2socXVlcnkpIHsKICAvL+mHjeaJq+S7u+WKoQogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9hdXRoX3Rlc3Rlci90YXNrJywKICAgIG1ldGhvZDogJ3BhdGNoJywKICAgIHBhcmFtczogcXVlcnkKICB9KTsKfQpleHBvcnQgZnVuY3Rpb24gUHV0VGFzayhkYXRhKSB7CiAgLy/mm7TmlrDku7vliqEKICByZXR1cm4gcmVxdWVzdCh7CiAgICB1cmw6ICcvYXV0aF90ZXN0ZXIvdGFzaycsCiAgICBtZXRob2Q6ICdwdXQnLAogICAgZGF0YTogZGF0YQogIH0pOwp9CmV4cG9ydCBmdW5jdGlvbiBEZWxldGVEZXRlY3QocXVlcnkpIHsKICAvL+WIoOmZpOajgOa1i+iusOW9lQogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9hdXRoX3Rlc3Rlci9kZXRlY3QnLAogICAgbWV0aG9kOiAnZGVsZXRlJywKICAgIHBhcmFtczogcXVlcnkKICB9KTsKfQ=="},{"version":3,"sources":["/home/views/aquaman_view/src/api/auth_tester.js"],"names":["request","DetectList","query","url","method","params","TaskList","ConfigData","AddTask","data","TaskDetail","DelTask","RescanTask","PutTask","DeleteDetect"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAGA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAE;AAChC,SAAOF,OAAO,CAAC;AACXG,IAAAA,GAAG,EAAE,qBADM;AAEXC,IAAAA,MAAM,EAAE,KAFG;AAGXC,IAAAA,MAAM,EAAEH;AAHG,GAAD,CAAd;AAKH;AAED,OAAO,SAASI,QAAT,CAAkBJ,KAAlB,EAAyB;AAAE;AAC9B,SAAOF,OAAO,CAAC;AACXG,IAAAA,GAAG,EAAE,oBADM;AAEXC,IAAAA,MAAM,EAAE,KAFG;AAGXC,IAAAA,MAAM,EAAEH;AAHG,GAAD,CAAd;AAKH;AAED,OAAO,SAASK,UAAT,GAAsB;AAAE;AAC3B,SAAOP,OAAO,CAAC;AACXG,IAAAA,GAAG,EAAE,qBADM;AAEXC,IAAAA,MAAM,EAAE;AAFG,GAAD,CAAd;AAIH;AAED,OAAO,SAASI,OAAT,CAAiBC,IAAjB,EAAuB;AAAE;AAC5B,SAAOT,OAAO,CAAC;AACXG,IAAAA,GAAG,EAAE,mBADM;AAEXC,IAAAA,MAAM,EAAE,MAFG;AAGXK,IAAAA,IAAI,EAAJA;AAHW,GAAD,CAAd;AAKH;AAED,OAAO,SAASC,UAAT,CAAoBR,KAApB,EAA2B;AAAE;AAChC,SAAOF,OAAO,CAAC;AACXG,IAAAA,GAAG,EAAE,mBADM;AAEXC,IAAAA,MAAM,EAAE,KAFG;AAGXC,IAAAA,MAAM,EAAEH;AAHG,GAAD,CAAd;AAKH;AAED,OAAO,SAASS,OAAT,CAAiBT,KAAjB,EAAwB;AAAE;AAC7B,SAAOF,OAAO,CAAC;AACXG,IAAAA,GAAG,EAAE,mBADM;AAEXC,IAAAA,MAAM,EAAE,QAFG;AAGXC,IAAAA,MAAM,EAAEH;AAHG,GAAD,CAAd;AAKH;AAED,OAAO,SAASU,UAAT,CAAoBV,KAApB,EAA2B;AAAE;AAChC,SAAOF,OAAO,CAAC;AACXG,IAAAA,GAAG,EAAE,mBADM;AAEXC,IAAAA,MAAM,EAAE,OAFG;AAGXC,IAAAA,MAAM,EAAEH;AAHG,GAAD,CAAd;AAKH;AAED,OAAO,SAASW,OAAT,CAAiBJ,IAAjB,EAAuB;AAAE;AAC5B,SAAOT,OAAO,CAAC;AACXG,IAAAA,GAAG,EAAE,mBADM;AAEXC,IAAAA,MAAM,EAAE,KAFG;AAGXK,IAAAA,IAAI,EAAJA;AAHW,GAAD,CAAd;AAKH;AAED,OAAO,SAASK,YAAT,CAAsBZ,KAAtB,EAA6B;AAAE;AAClC,SAAOF,OAAO,CAAC;AACXG,IAAAA,GAAG,EAAE,qBADM;AAEXC,IAAAA,MAAM,EAAE,QAFG;AAGXC,IAAAA,MAAM,EAAEH;AAHG,GAAD,CAAd;AAKH","sourcesContent":["import request from '@/utils/request'\n\n\nexport function DetectList(query) { //检出列表\n    return request({\n        url: '/auth_tester/detect',\n        method: 'get',\n        params: query\n    })\n}\n\nexport function TaskList(query) { //任务列表\n    return request({\n        url: '/auth_tester/tasks',\n        method: 'get',\n        params: query\n    })\n}\n\nexport function ConfigData() { //获取认证检测配置信息\n    return request({\n        url: '/auth_tester/config',\n        method: 'get',\n    })\n}\n\nexport function AddTask(data) { //创建任务\n    return request({\n        url: '/auth_tester/task',\n        method: 'post',\n        data\n    })\n}\n\nexport function TaskDetail(query) { //任务详情\n    return request({\n        url: '/auth_tester/task',\n        method: 'get',\n        params: query\n    })\n}\n\nexport function DelTask(query) { //删除任务\n    return request({\n        url: '/auth_tester/task',\n        method: 'delete',\n        params: query\n    })\n}\n\nexport function RescanTask(query) { //重扫任务\n    return request({\n        url: '/auth_tester/task',\n        method: 'patch',\n        params: query\n    })\n}\n\nexport function PutTask(data) { //更新任务\n    return request({\n        url: '/auth_tester/task',\n        method: 'put',\n        data\n    })\n}\n\nexport function DeleteDetect(query) { //删除检测记录\n    return request({\n        url: '/auth_tester/detect',\n        method: 'delete',\n        params: query\n    })\n}"]}]}